{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\index.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nconst app = require(\"./app\");\n// import app from \"./app\"\nconst main = () => {\n  app.listen(app.get(\"port\"));\n  console.log(`Server on Port  ${app.get(\"port\")}`);\n};\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwibWFpbiIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccGF0cmlcXE9uZURyaXZlXFxEb2N1bWVudG9zXFxHaXRIdWJcXFBvcnRhZm9saW8tdGl0dWxvXFxBUEkgKyBCQkREXFxBUEkgcmVjZXRhc1xcc3JjXFwiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFwcCA9IHJlcXVpcmUoXCIuL2FwcFwiKTtcclxuLy8gaW1wb3J0IGFwcCBmcm9tIFwiLi9hcHBcIlxyXG5jb25zdCBtYWluPSgpPT57XHJcbiAgICBhcHAubGlzdGVuKGFwcC5nZXQoXCJwb3J0XCIpKTtcclxuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgb24gUG9ydCAgJHthcHAuZ2V0KFwicG9ydFwiKX1gKVxyXG59O1xyXG5cclxubWFpbigpOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDNUI7QUFDQSxNQUFNQyxJQUFJLEdBQUNBLENBQUEsS0FBSTtFQUNYRixHQUFHLENBQUNHLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDSSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7RUFDM0JDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFLG1CQUFrQk4sR0FBRyxDQUFDSSxHQUFHLENBQUMsTUFBTSxDQUFFLEVBQUMsQ0FBQztBQUNyRCxDQUFDO0FBRURGLElBQUksQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["app","require","main","listen","get","console","log"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["index.js"],"sourcesContent":["const app = require(\"./app\");\r\n// import app from \"./app\"\r\nconst main=()=>{\r\n    app.listen(app.get(\"port\"));\r\n    console.log(`Server on Port  ${app.get(\"port\")}`)\r\n};\r\n\r\nmain();"],"mappings":";;AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B;AACA,MAAMC,IAAI,GAACA,CAAA,KAAI;EACXF,GAAG,CAACG,MAAM,CAACH,GAAG,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC;EAC3BC,OAAO,CAACC,GAAG,CAAE,mBAAkBN,GAAG,CAACI,GAAG,CAAC,MAAM,CAAE,EAAC,CAAC;AACrD,CAAC;AAEDF,IAAI,CAAC,CAAC","ignoreList":[]}},"mtime":1713391155973},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\app.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\n// routes - rutas\n// import LanguageRoutes from \"./routes/language.routes\"\nconst LanguageRoutes = require('./routes/language.routes');\nconst express = require('express');\nconst morgan = require('morgan');\n// import express from \"express\";\n// import morgan from \"morgan\";\nconst app = express(); //ejecu express\nconst cors = require('cors');\n// settings\napp.set(\"port\", 3000);\n// middleware\napp.use(morgan(\"dev\"));\napp.use(cors({\n  origin: ['http://localhost:3000']\n}));\napp.use(express.json());\n\n// routes\n// app.use(\"/listado\", LanguageRoutes)\napp.use(\"/\", LanguageRoutes);\n// app.use(\"/api/usuarios\")\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMYW5ndWFnZVJvdXRlcyIsInJlcXVpcmUiLCJleHByZXNzIiwibW9yZ2FuIiwiYXBwIiwiY29ycyIsInNldCIsInVzZSIsIm9yaWdpbiIsImpzb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xcIiwic291cmNlcyI6WyJhcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcm91dGVzIC0gcnV0YXNcclxuLy8gaW1wb3J0IExhbmd1YWdlUm91dGVzIGZyb20gXCIuL3JvdXRlcy9sYW5ndWFnZS5yb3V0ZXNcIlxyXG5jb25zdCBMYW5ndWFnZVJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL2xhbmd1YWdlLnJvdXRlcycpO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUgKCdtb3JnYW4nKVxyXG4vLyBpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG4vLyBpbXBvcnQgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjtcclxuY29uc3QgYXBwPWV4cHJlc3MoKTsgLy9lamVjdSBleHByZXNzXHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJylcclxuLy8gc2V0dGluZ3NcclxuYXBwLnNldChcInBvcnRcIiwgMzAwMCk7XHJcbi8vIG1pZGRsZXdhcmVcclxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xyXG5hcHAudXNlKGNvcnMoXHJcbiAgICB7b3JpZ2luOiBbJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcsXX1cclxuKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuLy8gcm91dGVzXHJcbi8vIGFwcC51c2UoXCIvbGlzdGFkb1wiLCBMYW5ndWFnZVJvdXRlcylcclxuYXBwLnVzZShcIi9cIixMYW5ndWFnZVJvdXRlcylcclxuLy8gYXBwLnVzZShcIi9hcGkvdXN1YXJpb3NcIilcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0EsTUFBTUEsY0FBYyxHQUFHQyxPQUFPLENBQUMsMEJBQTBCLENBQUM7QUFDMUQsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFFLFFBQVEsQ0FBQztBQUNqQztBQUNBO0FBQ0EsTUFBTUcsR0FBRyxHQUFDRixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckIsTUFBTUcsSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCO0FBQ0FHLEdBQUcsQ0FBQ0UsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7QUFDckI7QUFDQUYsR0FBRyxDQUFDRyxHQUFHLENBQUNKLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN0QkMsR0FBRyxDQUFDRyxHQUFHLENBQUNGLElBQUksQ0FDUjtFQUFDRyxNQUFNLEVBQUUsQ0FBQyx1QkFBdUI7QUFBRSxDQUN2QyxDQUFDLENBQUM7QUFDRkosR0FBRyxDQUFDRyxHQUFHLENBQUNMLE9BQU8sQ0FBQ08sSUFBSSxDQUFDLENBQUMsQ0FBQzs7QUFFdkI7QUFDQTtBQUNBTCxHQUFHLENBQUNHLEdBQUcsQ0FBQyxHQUFHLEVBQUNQLGNBQWMsQ0FBQztBQUMzQjs7QUFFQVUsTUFBTSxDQUFDQyxPQUFPLEdBQUdQLEdBQUciLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["LanguageRoutes","require","express","morgan","app","cors","set","use","origin","json","module","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["app.js"],"sourcesContent":["// routes - rutas\r\n// import LanguageRoutes from \"./routes/language.routes\"\r\nconst LanguageRoutes = require('./routes/language.routes');\r\nconst express = require('express')\r\nconst morgan = require ('morgan')\r\n// import express from \"express\";\r\n// import morgan from \"morgan\";\r\nconst app=express(); //ejecu express\r\nconst cors = require('cors')\r\n// settings\r\napp.set(\"port\", 3000);\r\n// middleware\r\napp.use(morgan(\"dev\"));\r\napp.use(cors(\r\n    {origin: ['http://localhost:3000',]}\r\n));\r\napp.use(express.json());\r\n\r\n// routes\r\n// app.use(\"/listado\", LanguageRoutes)\r\napp.use(\"/\",LanguageRoutes)\r\n// app.use(\"/api/usuarios\")\r\n\r\nmodule.exports = app;"],"mappings":";;AAAA;AACA;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,MAAM,GAAGF,OAAO,CAAE,QAAQ,CAAC;AACjC;AACA;AACA,MAAMG,GAAG,GAACF,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,MAAMG,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B;AACAG,GAAG,CAACE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AACrB;AACAF,GAAG,CAACG,GAAG,CAACJ,MAAM,CAAC,KAAK,CAAC,CAAC;AACtBC,GAAG,CAACG,GAAG,CAACF,IAAI,CACR;EAACG,MAAM,EAAE,CAAC,uBAAuB;AAAE,CACvC,CAAC,CAAC;AACFJ,GAAG,CAACG,GAAG,CAACL,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA;AACAL,GAAG,CAACG,GAAG,CAAC,GAAG,EAACP,cAAc,CAAC;AAC3B;;AAEAU,MAAM,CAACC,OAAO,GAAGP,GAAG","ignoreList":[]}},"mtime":1713389817403},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\routes\\\\language.routes.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _express = require(\"express\");\nvar _recetas = require(\"../controllers/recetas.controller\");\nvar _user = require(\"../controllers/user.controller\");\n// ruta del proyecto\nconst router = (0, _express.Router)();\n// url principales | https://api.pquintanilla.cl/\n// router.get(\"/\", recetasController.getRecetas);\nrouter.get(\"/\", (req, res) => {\n  _recetas.methods.getRecetas(req, res);\n});\n// router.get(\"/usuario\", userController.getUser);\nrouter.get(\"/usuario\", (req, res) => {\n  _user.usermethods.getUser(req, res);\n});\n\n// ========= RECETAS =========\n\n// METODOS GET\nrouter.get(\"/receta/:id\", _recetas.methods.getReceta); // https://api.pquintanilla.cl/receta/numero\nrouter.get(\"/recetas-chile\", _recetas.methods.getRecetaCL); // https://api.pquintanilla.cl/recetas-chile\nrouter.get(\"/recetas-usa\", _recetas.methods.getRecetaUSA); // https://api.pquintanilla.cl/recetas-usa\nrouter.get(\"/recetas-gb\", _recetas.methods.getRecetaGB); // https://api.pquintanilla.cl/recetas-gb\nrouter.get(\"/recetas-canada\", _recetas.methods.getRecetaCA); // https://api.pquintanilla.cl/recetas-canada\nrouter.get(\"/recetas-es\", _recetas.methods.getRecetaES); // https://api.pquintanilla.cl/recetas-es\nrouter.get(\"/recetas-mexico\", _recetas.methods.getRecetaMX); // https://api.pquintanilla.cl/recetas-mexico\nrouter.get(\"/recetas-argentina\", _recetas.methods.getReceta_ARG); // https://api.pquintanilla.cl/recetas-argentina\nrouter.get(\"/paises\", _recetas.methods.getPaises); // https://api.pquintanilla.cl/paises\nrouter.get(\"/categorias\", _recetas.methods.getCategorias); // https://api.pquintanilla.cl/categorias\nrouter.get(\"/categorias-postres\", _recetas.methods.getPostres); // https://api.pquintanilla.cl/categorias-postres\nrouter.get(\"/categorias-desayuno\", _recetas.methods.getDesayuno); // https://api.pquintanilla.cl/categorias-desayuno\n// METODOS POST\n// Ruta PUT para agregar una receta\napp.put('/add-receta', (req, res) => {\n  res.status(200).send('Receta agregada exitosamente'); // https://api.pquintanilla.cl/add-receta\n});\n// METODOS PUT\nrouter.put(\"/edit-receta/:id\", _recetas.methods.updateReceta); // https://api.pquintanilla.cl/edit-receta/numero\n// METODOS DELETE\nrouter.delete(\"/delete-receta/:id\", _recetas.methods.deleteReceta); // https://api.pquintanilla.cl/delete-receta/numero\n\n// ========= USUARIOS =========\n\n// METODO GET\nrouter.get(\"/\", _user.usermethods.getUser); // https://api.pquintanilla.cl/usuario\nrouter.get(\"/usuarioejemplo\", _user.usermethods.ejemploUserPaginado); // https://api.pquintanilla.cl/usuarioejemplo?page=1\n// METODO POST\nrouter.post(\"/usuario\"); // https://api.pquintanilla.cl/usuario\n// METODO PUT\nrouter.put(\"/usuario\"); // https://api.pquintanilla.cl/usuario\n// METODO DELETE\nrouter.delete(\"/usuario\"); // https://api.pquintanilla.cl/usuario\nvar _default = exports.default = router;\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfcmVjZXRhcyIsIl91c2VyIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwicmVjZXRhc0NvbnRyb2xsZXIiLCJnZXRSZWNldGFzIiwidXNlckNvbnRyb2xsZXIiLCJnZXRVc2VyIiwiZ2V0UmVjZXRhIiwiZ2V0UmVjZXRhQ0wiLCJnZXRSZWNldGFVU0EiLCJnZXRSZWNldGFHQiIsImdldFJlY2V0YUNBIiwiZ2V0UmVjZXRhRVMiLCJnZXRSZWNldGFNWCIsImdldFJlY2V0YV9BUkciLCJnZXRQYWlzZXMiLCJnZXRDYXRlZ29yaWFzIiwiZ2V0UG9zdHJlcyIsImdldERlc2F5dW5vIiwiYXBwIiwicHV0Iiwic3RhdHVzIiwic2VuZCIsInVwZGF0ZVJlY2V0YSIsImRlbGV0ZSIsImRlbGV0ZVJlY2V0YSIsImVqZW1wbG9Vc2VyUGFnaW5hZG8iLCJwb3N0IiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxwYXRyaVxcT25lRHJpdmVcXERvY3VtZW50b3NcXEdpdEh1YlxcUG9ydGFmb2xpby10aXR1bG9cXEFQSSArIEJCRERcXEFQSSByZWNldGFzXFxzcmNcXHJvdXRlc1xcIiwic291cmNlcyI6WyJsYW5ndWFnZS5yb3V0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcclxuaW1wb3J0IHsgbWV0aG9kcyBhcyByZWNldGFzQ29udHJvbGxlciB9IGZyb20gXCIuLi9jb250cm9sbGVycy9yZWNldGFzLmNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHsgdXNlcm1ldGhvZHMgYXMgdXNlckNvbnRyb2xsZXIgfSBmcm9tIFwiLi4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyXCI7XHJcbi8vIHJ1dGEgZGVsIHByb3llY3RvXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG4vLyB1cmwgcHJpbmNpcGFsZXMgfCBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvXHJcbi8vIHJvdXRlci5nZXQoXCIvXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YXMpO1xyXG5yb3V0ZXIuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YXMocmVxLCByZXMpO1xyXG59KTtcclxuLy8gcm91dGVyLmdldChcIi91c3VhcmlvXCIsIHVzZXJDb250cm9sbGVyLmdldFVzZXIpO1xyXG5yb3V0ZXIuZ2V0KFwiL3VzdWFyaW9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICB1c2VyQ29udHJvbGxlci5nZXRVc2VyKHJlcSwgcmVzKTtcclxufSk7XHJcblxyXG4vLyA9PT09PT09PT0gUkVDRVRBUyA9PT09PT09PT1cclxuXHJcbi8vIE1FVE9ET1MgR0VUXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhLzppZFwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGEpOyAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvcmVjZXRhL251bWVyb1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtY2hpbGVcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhQ0wpIC8vIGh0dHBzOi8vYXBpLnBxdWludGFuaWxsYS5jbC9yZWNldGFzLWNoaWxlXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy11c2FcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhVVNBKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvcmVjZXRhcy11c2Fcclxucm91dGVyLmdldChcIi9yZWNldGFzLWdiXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YUdCKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvcmVjZXRhcy1nYlxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtY2FuYWRhXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YUNBKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvcmVjZXRhcy1jYW5hZGFcclxucm91dGVyLmdldChcIi9yZWNldGFzLWVzXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YUVTKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvcmVjZXRhcy1lc1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtbWV4aWNvXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YU1YKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvcmVjZXRhcy1tZXhpY29cclxucm91dGVyLmdldChcIi9yZWNldGFzLWFyZ2VudGluYVwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFfQVJHKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvcmVjZXRhcy1hcmdlbnRpbmFcclxucm91dGVyLmdldChcIi9wYWlzZXNcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UGFpc2VzKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvcGFpc2VzXHJcbnJvdXRlci5nZXQoXCIvY2F0ZWdvcmlhc1wiLCByZWNldGFzQ29udHJvbGxlci5nZXRDYXRlZ29yaWFzKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvY2F0ZWdvcmlhc1xyXG5yb3V0ZXIuZ2V0KFwiL2NhdGVnb3JpYXMtcG9zdHJlc1wiLCByZWNldGFzQ29udHJvbGxlci5nZXRQb3N0cmVzKSAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvY2F0ZWdvcmlhcy1wb3N0cmVzXHJcbnJvdXRlci5nZXQoXCIvY2F0ZWdvcmlhcy1kZXNheXVub1wiLCByZWNldGFzQ29udHJvbGxlci5nZXREZXNheXVubykgLy8gaHR0cHM6Ly9hcGkucHF1aW50YW5pbGxhLmNsL2NhdGVnb3JpYXMtZGVzYXl1bm9cclxuLy8gTUVUT0RPUyBQT1NUXHJcbi8vIFJ1dGEgUFVUIHBhcmEgYWdyZWdhciB1bmEgcmVjZXRhXHJcbmFwcC5wdXQoJy9hZGQtcmVjZXRhJywgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuc2VuZCgnUmVjZXRhIGFncmVnYWRhIGV4aXRvc2FtZW50ZScpOyAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvYWRkLXJlY2V0YVxyXG59KTsgXHJcbi8vIE1FVE9ET1MgUFVUXHJcbnJvdXRlci5wdXQoXCIvZWRpdC1yZWNldGEvOmlkXCIsIHJlY2V0YXNDb250cm9sbGVyLnVwZGF0ZVJlY2V0YSk7IC8vIGh0dHBzOi8vYXBpLnBxdWludGFuaWxsYS5jbC9lZGl0LXJlY2V0YS9udW1lcm9cclxuLy8gTUVUT0RPUyBERUxFVEVcclxucm91dGVyLmRlbGV0ZShcIi9kZWxldGUtcmVjZXRhLzppZFwiLCByZWNldGFzQ29udHJvbGxlci5kZWxldGVSZWNldGEpOyAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvZGVsZXRlLXJlY2V0YS9udW1lcm9cclxuXHJcblxyXG4vLyA9PT09PT09PT0gVVNVQVJJT1MgPT09PT09PT09XHJcblxyXG4vLyBNRVRPRE8gR0VUXHJcbnJvdXRlci5nZXQoXCIvXCIsIHVzZXJDb250cm9sbGVyLmdldFVzZXIpOyAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvdXN1YXJpb1xyXG5yb3V0ZXIuZ2V0KFwiL3VzdWFyaW9lamVtcGxvXCIsIHVzZXJDb250cm9sbGVyLmVqZW1wbG9Vc2VyUGFnaW5hZG8pOyAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvdXN1YXJpb2VqZW1wbG8/cGFnZT0xXHJcbi8vIE1FVE9ETyBQT1NUXHJcbnJvdXRlci5wb3N0KFwiL3VzdWFyaW9cIik7IC8vIGh0dHBzOi8vYXBpLnBxdWludGFuaWxsYS5jbC91c3VhcmlvXHJcbi8vIE1FVE9ETyBQVVRcclxucm91dGVyLnB1dChcIi91c3VhcmlvXCIpOyAvLyBodHRwczovL2FwaS5wcXVpbnRhbmlsbGEuY2wvdXN1YXJpb1xyXG4vLyBNRVRPRE8gREVMRVRFXHJcbnJvdXRlci5kZWxldGUoXCIvdXN1YXJpb1wiKTsgLy8gaHR0cHM6Ly9hcGkucHF1aW50YW5pbGxhLmNsL3VzdWFyaW9cclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLFFBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLFFBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLEtBQUEsR0FBQUYsT0FBQTtBQUNBO0FBQ0EsTUFBTUcsTUFBTSxHQUFHLElBQUFDLGVBQU0sRUFBQyxDQUFDO0FBQ3ZCO0FBQ0E7QUFDQUQsTUFBTSxDQUFDRSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQzFCQyxnQkFBaUIsQ0FBQ0MsVUFBVSxDQUFDSCxHQUFHLEVBQUVDLEdBQUcsQ0FBQztBQUMxQyxDQUFDLENBQUM7QUFDRjtBQUNBSixNQUFNLENBQUNFLEdBQUcsQ0FBQyxVQUFVLEVBQUUsQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDakNHLGlCQUFjLENBQUNDLE9BQU8sQ0FBQ0wsR0FBRyxFQUFFQyxHQUFHLENBQUM7QUFDcEMsQ0FBQyxDQUFDOztBQUVGOztBQUVBO0FBQ0FKLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGFBQWEsRUFBRUcsZ0JBQWlCLENBQUNJLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDeERULE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGdCQUFnQixFQUFFRyxnQkFBaUIsQ0FBQ0ssV0FBVyxDQUFDLEVBQUM7QUFDNURWLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGNBQWMsRUFBRUcsZ0JBQWlCLENBQUNNLFlBQVksQ0FBQyxFQUFDO0FBQzNEWCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxhQUFhLEVBQUVHLGdCQUFpQixDQUFDTyxXQUFXLENBQUMsRUFBQztBQUN6RFosTUFBTSxDQUFDRSxHQUFHLENBQUMsaUJBQWlCLEVBQUVHLGdCQUFpQixDQUFDUSxXQUFXLENBQUMsRUFBQztBQUM3RGIsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFRyxnQkFBaUIsQ0FBQ1MsV0FBVyxDQUFDLEVBQUM7QUFDekRkLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGlCQUFpQixFQUFFRyxnQkFBaUIsQ0FBQ1UsV0FBVyxDQUFDLEVBQUM7QUFDN0RmLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLG9CQUFvQixFQUFFRyxnQkFBaUIsQ0FBQ1csYUFBYSxDQUFDLEVBQUM7QUFDbEVoQixNQUFNLENBQUNFLEdBQUcsQ0FBQyxTQUFTLEVBQUVHLGdCQUFpQixDQUFDWSxTQUFTLENBQUMsRUFBQztBQUNuRGpCLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGFBQWEsRUFBRUcsZ0JBQWlCLENBQUNhLGFBQWEsQ0FBQyxFQUFDO0FBQzNEbEIsTUFBTSxDQUFDRSxHQUFHLENBQUMscUJBQXFCLEVBQUVHLGdCQUFpQixDQUFDYyxVQUFVLENBQUMsRUFBQztBQUNoRW5CLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLHNCQUFzQixFQUFFRyxnQkFBaUIsQ0FBQ2UsV0FBVyxDQUFDLEVBQUM7QUFDbEU7QUFDQTtBQUNBQyxHQUFHLENBQUNDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsQ0FBQ25CLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ2pDQSxHQUFHLENBQUNtQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLENBQUM7QUFDMUQsQ0FBQyxDQUFDO0FBQ0Y7QUFDQXhCLE1BQU0sQ0FBQ3NCLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRWpCLGdCQUFpQixDQUFDb0IsWUFBWSxDQUFDLENBQUMsQ0FBQztBQUNoRTtBQUNBekIsTUFBTSxDQUFDMEIsTUFBTSxDQUFDLG9CQUFvQixFQUFFckIsZ0JBQWlCLENBQUNzQixZQUFZLENBQUMsQ0FBQyxDQUFDOztBQUdyRTs7QUFFQTtBQUNBM0IsTUFBTSxDQUFDRSxHQUFHLENBQUMsR0FBRyxFQUFFSyxpQkFBYyxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ3pDUixNQUFNLENBQUNFLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRUssaUJBQWMsQ0FBQ3FCLG1CQUFtQixDQUFDLENBQUMsQ0FBQztBQUNuRTtBQUNBNUIsTUFBTSxDQUFDNkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDekI7QUFDQTdCLE1BQU0sQ0FBQ3NCLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQ3hCO0FBQ0F0QixNQUFNLENBQUMwQixNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUFBLElBQUFJLFFBQUEsR0FBQUMsT0FBQSxDQUFBQyxPQUFBLEdBSVpoQyxNQUFNO0FBRXJCaUMsTUFBTSxDQUFDRixPQUFPLEdBQUcvQixNQUFNIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["_express","require","_recetas","_user","router","Router","get","req","res","recetasController","getRecetas","userController","getUser","getReceta","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPaises","getCategorias","getPostres","getDesayuno","app","put","status","send","updateReceta","delete","deleteReceta","ejemploUserPaginado","post","_default","exports","default","module"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\routes\\","sources":["language.routes.js"],"sourcesContent":["import { Router } from \"express\";\r\nimport { methods as recetasController } from \"../controllers/recetas.controller\";\r\nimport { usermethods as userController } from \"../controllers/user.controller\";\r\n// ruta del proyecto\r\nconst router = Router();\r\n// url principales | https://api.pquintanilla.cl/\r\n// router.get(\"/\", recetasController.getRecetas);\r\nrouter.get(\"/\", (req, res) => {\r\n    recetasController.getRecetas(req, res);\r\n});\r\n// router.get(\"/usuario\", userController.getUser);\r\nrouter.get(\"/usuario\", (req, res) => {\r\n    userController.getUser(req, res);\r\n});\r\n\r\n// ========= RECETAS =========\r\n\r\n// METODOS GET\r\nrouter.get(\"/receta/:id\", recetasController.getReceta); // https://api.pquintanilla.cl/receta/numero\r\nrouter.get(\"/recetas-chile\", recetasController.getRecetaCL) // https://api.pquintanilla.cl/recetas-chile\r\nrouter.get(\"/recetas-usa\", recetasController.getRecetaUSA) // https://api.pquintanilla.cl/recetas-usa\r\nrouter.get(\"/recetas-gb\", recetasController.getRecetaGB) // https://api.pquintanilla.cl/recetas-gb\r\nrouter.get(\"/recetas-canada\", recetasController.getRecetaCA) // https://api.pquintanilla.cl/recetas-canada\r\nrouter.get(\"/recetas-es\", recetasController.getRecetaES) // https://api.pquintanilla.cl/recetas-es\r\nrouter.get(\"/recetas-mexico\", recetasController.getRecetaMX) // https://api.pquintanilla.cl/recetas-mexico\r\nrouter.get(\"/recetas-argentina\", recetasController.getReceta_ARG) // https://api.pquintanilla.cl/recetas-argentina\r\nrouter.get(\"/paises\", recetasController.getPaises) // https://api.pquintanilla.cl/paises\r\nrouter.get(\"/categorias\", recetasController.getCategorias) // https://api.pquintanilla.cl/categorias\r\nrouter.get(\"/categorias-postres\", recetasController.getPostres) // https://api.pquintanilla.cl/categorias-postres\r\nrouter.get(\"/categorias-desayuno\", recetasController.getDesayuno) // https://api.pquintanilla.cl/categorias-desayuno\r\n// METODOS POST\r\n// Ruta PUT para agregar una receta\r\napp.put('/add-receta', (req, res) => {\r\n    res.status(200).send('Receta agregada exitosamente'); // https://api.pquintanilla.cl/add-receta\r\n}); \r\n// METODOS PUT\r\nrouter.put(\"/edit-receta/:id\", recetasController.updateReceta); // https://api.pquintanilla.cl/edit-receta/numero\r\n// METODOS DELETE\r\nrouter.delete(\"/delete-receta/:id\", recetasController.deleteReceta); // https://api.pquintanilla.cl/delete-receta/numero\r\n\r\n\r\n// ========= USUARIOS =========\r\n\r\n// METODO GET\r\nrouter.get(\"/\", userController.getUser); // https://api.pquintanilla.cl/usuario\r\nrouter.get(\"/usuarioejemplo\", userController.ejemploUserPaginado); // https://api.pquintanilla.cl/usuarioejemplo?page=1\r\n// METODO POST\r\nrouter.post(\"/usuario\"); // https://api.pquintanilla.cl/usuario\r\n// METODO PUT\r\nrouter.put(\"/usuario\"); // https://api.pquintanilla.cl/usuario\r\n// METODO DELETE\r\nrouter.delete(\"/usuario\"); // https://api.pquintanilla.cl/usuario\r\n\r\n\r\n\r\nexport default router;\r\n\r\nmodule.exports = router"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA;AACA,MAAMG,MAAM,GAAG,IAAAC,eAAM,EAAC,CAAC;AACvB;AACA;AACAD,MAAM,CAACE,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC1BC,gBAAiB,CAACC,UAAU,CAACH,GAAG,EAAEC,GAAG,CAAC;AAC1C,CAAC,CAAC;AACF;AACAJ,MAAM,CAACE,GAAG,CAAC,UAAU,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjCG,iBAAc,CAACC,OAAO,CAACL,GAAG,EAAEC,GAAG,CAAC;AACpC,CAAC,CAAC;;AAEF;;AAEA;AACAJ,MAAM,CAACE,GAAG,CAAC,aAAa,EAAEG,gBAAiB,CAACI,SAAS,CAAC,CAAC,CAAC;AACxDT,MAAM,CAACE,GAAG,CAAC,gBAAgB,EAAEG,gBAAiB,CAACK,WAAW,CAAC,EAAC;AAC5DV,MAAM,CAACE,GAAG,CAAC,cAAc,EAAEG,gBAAiB,CAACM,YAAY,CAAC,EAAC;AAC3DX,MAAM,CAACE,GAAG,CAAC,aAAa,EAAEG,gBAAiB,CAACO,WAAW,CAAC,EAAC;AACzDZ,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAAEG,gBAAiB,CAACQ,WAAW,CAAC,EAAC;AAC7Db,MAAM,CAACE,GAAG,CAAC,aAAa,EAAEG,gBAAiB,CAACS,WAAW,CAAC,EAAC;AACzDd,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAAEG,gBAAiB,CAACU,WAAW,CAAC,EAAC;AAC7Df,MAAM,CAACE,GAAG,CAAC,oBAAoB,EAAEG,gBAAiB,CAACW,aAAa,CAAC,EAAC;AAClEhB,MAAM,CAACE,GAAG,CAAC,SAAS,EAAEG,gBAAiB,CAACY,SAAS,CAAC,EAAC;AACnDjB,MAAM,CAACE,GAAG,CAAC,aAAa,EAAEG,gBAAiB,CAACa,aAAa,CAAC,EAAC;AAC3DlB,MAAM,CAACE,GAAG,CAAC,qBAAqB,EAAEG,gBAAiB,CAACc,UAAU,CAAC,EAAC;AAChEnB,MAAM,CAACE,GAAG,CAAC,sBAAsB,EAAEG,gBAAiB,CAACe,WAAW,CAAC,EAAC;AAClE;AACA;AACAC,GAAG,CAACC,GAAG,CAAC,aAAa,EAAE,CAACnB,GAAG,EAAEC,GAAG,KAAK;EACjCA,GAAG,CAACmB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC;AACF;AACAxB,MAAM,CAACsB,GAAG,CAAC,kBAAkB,EAAEjB,gBAAiB,CAACoB,YAAY,CAAC,CAAC,CAAC;AAChE;AACAzB,MAAM,CAAC0B,MAAM,CAAC,oBAAoB,EAAErB,gBAAiB,CAACsB,YAAY,CAAC,CAAC,CAAC;;AAGrE;;AAEA;AACA3B,MAAM,CAACE,GAAG,CAAC,GAAG,EAAEK,iBAAc,CAACC,OAAO,CAAC,CAAC,CAAC;AACzCR,MAAM,CAACE,GAAG,CAAC,iBAAiB,EAAEK,iBAAc,CAACqB,mBAAmB,CAAC,CAAC,CAAC;AACnE;AACA5B,MAAM,CAAC6B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACzB;AACA7B,MAAM,CAACsB,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AACxB;AACAtB,MAAM,CAAC0B,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AAAA,IAAAI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAIZhC,MAAM;AAErBiC,MAAM,CAACF,OAAO,GAAG/B,MAAM","ignoreList":[]}},"mtime":1713392474999},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\language.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\n// PARA OBTENER LOS RESULTADOS\nconst getRecetas = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.Año, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getPaises = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    console.log(result); // Este es el mensaje que se desplegará en la consola\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getCategorias = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT categoria FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR id\nconst getReceta = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.categoria,\n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.id_receta=?`, id);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA AÑADIR ELEMENTOS\nconst addReceta = async (req, res) => {\n  try {\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    } = req.body;\n\n    // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n    //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n    // }\n\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\n    res.json({\n      message: \"Receta añadida exitosamente\"\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA ELIMINAR ELEMENTOS\nconst deleteReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Elemento con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún elemento con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR ELEMENTOS\nconst updateReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    } = req.body;\n    if (nombre_receta == undefined || ingrediente_receta == undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\", [receta, id]);\n\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCL = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='chile';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nconst getRecetaUSA = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = Gran Bretaña\nconst getRecetaGB = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCA = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaES = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='españa';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaMX = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getReceta_ARG = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nconst getPostres = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='postres';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// seleccionar desayunos\nconst getDesayuno = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='desayuno';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nconst getUser = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst ejemploUserPaginado = async (req, res) => {\n  try {\n    const {\n      page\n    } = req.query; // Obtener el número de página de la consulta\n    const itemsPerPage = 10; // Número de resultados por página\n\n    // Calcular el offset basado en la página actual\n    const offset = (page - 1) * itemsPerPage;\n    const connection = await (0, _database.getConnection)();\n\n    // Consulta SQL con LIMIT y OFFSET para la paginación\n    const result = await connection.query(`SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA AÑADIR USUARIOS\nconst addUsuario = async (req, res) => {\n  try {\n    const {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    } = req.body;\n    // console.log(banda)\n    // console.log(disco)\n    if (nombres == undefined || user == undefined) {\n      res.status(400).json({\n        message: \"Bad Request, Por favor, completa los datos.\"\n      });\n    }\n    const usuarionuevo = {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n    res.json({\n      message: `Usuario ${user} añadido exitosamente`\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR USUARIOS\nconst updateUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombres,\n      user,\n      password\n    } = req.body;\n    if (user === undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const usuarioupdate = {\n      nombres,\n      user,\n      password\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n    res.json({\n      message: `Usuario ${user} Editado exitosamente`\n    });\n    // console.log(result);\n    // res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ELIMINAR ELEMENTOS\nconst deleteUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Usuario con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún usuario con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\nconst methods = exports.methods = {\n  // GET \n  getRecetas,\n  getReceta,\n  getRecetaCL,\n  getRecetaUSA,\n  getRecetaGB,\n  getRecetaCA,\n  getRecetaES,\n  getRecetaMX,\n  getReceta_ARG,\n  getPaises,\n  // CATEGORIAS\n  getCategorias,\n  getPostres,\n  getDesayuno,\n  // POST\n  addReceta,\n  // PUT\n  updateReceta,\n  // DELETE\n  deleteReceta,\n  // gestión usuarios\n  getUser,\n  ejemploUserPaginado,\n  addUsuario,\n  updateUsuario,\n  deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getRecetas","req","res","connection","getConnection","result","query","length","console","log","status","json","message","error","send","getPaises","getCategorias","getReceta","params","id","addReceta","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","body","receta","deleteReceta","affectedRows","updateReceta","undefined","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPostres","getDesayuno","getUser","ejemploUserPaginado","page","itemsPerPage","offset","addUsuario","nombres","user","password","fecha_creacion","usuarionuevo","updateUsuario","usuarioupdate","deleteUsuario","methods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["language.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.Año, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        console.log(result); // Este es el mensaje que se desplegará en la consola\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT categoria FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.categoria,\r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='chile';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='españa';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                        // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='postres';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='desayuno';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const result = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1713150854296},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\database\\\\database.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\n// import mysql from \"promise-mysql\";\n// import { claves } from \"./../config\";\n\n// const connection = mysql.createConnection({\n//     host: claves.host,\n//     database: claves.database,\n//     user: claves.user,\n//     password: claves.password\n// });\n\n// const getConnection = () => {\n//     return connection;\n// }\n\n// module.exports = {\n//     getConnection\n// }\n\nconst {\n  Sequelize\n} = require('sequelize');\nconst {\n  claves\n} = require('./../config');\n// Configuración de Sequelize\nconst sequelize = new Sequelize(claves.database, claves.user, claves.password, {\n  host: claves.host,\n  dialect: 'mysql'\n});\n\n// Definición del modelo de conexión\nconst Connection = sequelize.define('Connection');\n\n// Función para obtener la conexión\nconst getConnection = async () => {\n  try {\n    // Autenticar la conexión\n    await sequelize.authenticate();\n    console.log('Conexión establecida correctamente.');\n    return sequelize;\n  } catch (error) {\n    console.error('No se pudo conectar a la base de datos:', error);\n    throw error;\n  }\n};\n\n// Exportar la función de conexión\nmodule.exports = {\n  getConnection,\n  Connection\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwiY2xhdmVzIiwic2VxdWVsaXplIiwiZGF0YWJhc2UiLCJ1c2VyIiwicGFzc3dvcmQiLCJob3N0IiwiZGlhbGVjdCIsIkNvbm5lY3Rpb24iLCJkZWZpbmUiLCJnZXRDb25uZWN0aW9uIiwiYXV0aGVudGljYXRlIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxwYXRyaVxcT25lRHJpdmVcXERvY3VtZW50b3NcXEdpdEh1YlxcUG9ydGFmb2xpby10aXR1bG9cXEFQSSArIEJCRERcXEFQSSByZWNldGFzXFxzcmNcXGRhdGFiYXNlXFwiLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBteXNxbCBmcm9tIFwicHJvbWlzZS1teXNxbFwiO1xyXG4vLyBpbXBvcnQgeyBjbGF2ZXMgfSBmcm9tIFwiLi8uLi9jb25maWdcIjtcclxuXHJcbi8vIGNvbnN0IGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuLy8gICAgIGhvc3Q6IGNsYXZlcy5ob3N0LFxyXG4vLyAgICAgZGF0YWJhc2U6IGNsYXZlcy5kYXRhYmFzZSxcclxuLy8gICAgIHVzZXI6IGNsYXZlcy51c2VyLFxyXG4vLyAgICAgcGFzc3dvcmQ6IGNsYXZlcy5wYXNzd29yZFxyXG4vLyB9KTtcclxuXHJcbi8vIGNvbnN0IGdldENvbm5lY3Rpb24gPSAoKSA9PiB7XHJcbi8vICAgICByZXR1cm4gY29ubmVjdGlvbjtcclxuLy8gfVxyXG5cclxuLy8gbW9kdWxlLmV4cG9ydHMgPSB7XHJcbi8vICAgICBnZXRDb25uZWN0aW9uXHJcbi8vIH1cclxuXHJcblxyXG5jb25zdCB7IFNlcXVlbGl6ZSB9ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcbmNvbnN0IHsgY2xhdmVzIH0gPSByZXF1aXJlKCcuLy4uL2NvbmZpZycpO1xyXG4vLyBDb25maWd1cmFjacOzbiBkZSBTZXF1ZWxpemVcclxuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjbGF2ZXMuZGF0YWJhc2UsIGNsYXZlcy51c2VyLCBjbGF2ZXMucGFzc3dvcmQsIHtcclxuICBob3N0OiBjbGF2ZXMuaG9zdCxcclxuICBkaWFsZWN0OiAnbXlzcWwnLFxyXG59KTtcclxuXHJcbi8vIERlZmluaWNpw7NuIGRlbCBtb2RlbG8gZGUgY29uZXhpw7NuXHJcbmNvbnN0IENvbm5lY3Rpb24gPSBzZXF1ZWxpemUuZGVmaW5lKCdDb25uZWN0aW9uJyk7XHJcblxyXG4vLyBGdW5jacOzbiBwYXJhIG9idGVuZXIgbGEgY29uZXhpw7NuXHJcbmNvbnN0IGdldENvbm5lY3Rpb24gPSBhc3luYyAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIEF1dGVudGljYXIgbGEgY29uZXhpw7NuXHJcbiAgICBhd2FpdCBzZXF1ZWxpemUuYXV0aGVudGljYXRlKCk7XHJcbiAgICBjb25zb2xlLmxvZygnQ29uZXhpw7NuIGVzdGFibGVjaWRhIGNvcnJlY3RhbWVudGUuJyk7XHJcbiAgICByZXR1cm4gc2VxdWVsaXplO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdObyBzZSBwdWRvIGNvbmVjdGFyIGEgbGEgYmFzZSBkZSBkYXRvczonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vLyBFeHBvcnRhciBsYSBmdW5jacOzbiBkZSBjb25leGnDs25cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgZ2V0Q29ubmVjdGlvbixcclxuICBDb25uZWN0aW9uLFxyXG59O1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFHQSxNQUFNO0VBQUVBO0FBQVUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsV0FBVyxDQUFDO0FBQzFDLE1BQU07RUFBRUM7QUFBTyxDQUFDLEdBQUdELE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFDekM7QUFDQSxNQUFNRSxTQUFTLEdBQUcsSUFBSUgsU0FBUyxDQUFDRSxNQUFNLENBQUNFLFFBQVEsRUFBRUYsTUFBTSxDQUFDRyxJQUFJLEVBQUVILE1BQU0sQ0FBQ0ksUUFBUSxFQUFFO0VBQzdFQyxJQUFJLEVBQUVMLE1BQU0sQ0FBQ0ssSUFBSTtFQUNqQkMsT0FBTyxFQUFFO0FBQ1gsQ0FBQyxDQUFDOztBQUVGO0FBQ0EsTUFBTUMsVUFBVSxHQUFHTixTQUFTLENBQUNPLE1BQU0sQ0FBQyxZQUFZLENBQUM7O0FBRWpEO0FBQ0EsTUFBTUMsYUFBYSxHQUFHLE1BQUFBLENBQUEsS0FBWTtFQUNoQyxJQUFJO0lBQ0Y7SUFDQSxNQUFNUixTQUFTLENBQUNTLFlBQVksQ0FBQyxDQUFDO0lBQzlCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxxQ0FBcUMsQ0FBQztJQUNsRCxPQUFPWCxTQUFTO0VBQ2xCLENBQUMsQ0FBQyxPQUFPWSxLQUFLLEVBQUU7SUFDZEYsT0FBTyxDQUFDRSxLQUFLLENBQUMseUNBQXlDLEVBQUVBLEtBQUssQ0FBQztJQUMvRCxNQUFNQSxLQUFLO0VBQ2I7QUFDRixDQUFDOztBQUVEO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2ZOLGFBQWE7RUFDYkY7QUFDRixDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["Sequelize","require","claves","sequelize","database","user","password","host","dialect","Connection","define","getConnection","authenticate","console","log","error","module","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\database\\","sources":["database.js"],"sourcesContent":["// import mysql from \"promise-mysql\";\r\n// import { claves } from \"./../config\";\r\n\r\n// const connection = mysql.createConnection({\r\n//     host: claves.host,\r\n//     database: claves.database,\r\n//     user: claves.user,\r\n//     password: claves.password\r\n// });\r\n\r\n// const getConnection = () => {\r\n//     return connection;\r\n// }\r\n\r\n// module.exports = {\r\n//     getConnection\r\n// }\r\n\r\n\r\nconst { Sequelize } = require('sequelize');\r\nconst { claves } = require('./../config');\r\n// Configuración de Sequelize\r\nconst sequelize = new Sequelize(claves.database, claves.user, claves.password, {\r\n  host: claves.host,\r\n  dialect: 'mysql',\r\n});\r\n\r\n// Definición del modelo de conexión\r\nconst Connection = sequelize.define('Connection');\r\n\r\n// Función para obtener la conexión\r\nconst getConnection = async () => {\r\n  try {\r\n    // Autenticar la conexión\r\n    await sequelize.authenticate();\r\n    console.log('Conexión establecida correctamente.');\r\n    return sequelize;\r\n  } catch (error) {\r\n    console.error('No se pudo conectar a la base de datos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Exportar la función de conexión\r\nmodule.exports = {\r\n  getConnection,\r\n  Connection,\r\n};\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC1C,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC;AACA,MAAME,SAAS,GAAG,IAAIH,SAAS,CAACE,MAAM,CAACE,QAAQ,EAAEF,MAAM,CAACG,IAAI,EAAEH,MAAM,CAACI,QAAQ,EAAE;EAC7EC,IAAI,EAAEL,MAAM,CAACK,IAAI;EACjBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,MAAMC,UAAU,GAAGN,SAAS,CAACO,MAAM,CAAC,YAAY,CAAC;;AAEjD;AACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF;IACA,MAAMR,SAAS,CAACS,YAAY,CAAC,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,OAAOX,SAAS;EAClB,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACAC,MAAM,CAACC,OAAO,GAAG;EACfN,aAAa;EACbF;AACF,CAAC","ignoreList":[]}},"mtime":1713465476247},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\config.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.claves = void 0;\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n_dotenv.default.config();\nconst claves = exports.claves = {\n  host: process.env.HOST || \"\",\n  database: process.env.DATABASE || \"\",\n  user: process.env.USER || \"\",\n  password: process.env.PASSWORD || \"\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZG90ZW52IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImRvdGVudiIsImNvbmZpZyIsImNsYXZlcyIsImV4cG9ydHMiLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJkYXRhYmFzZSIsIkRBVEFCQVNFIiwidXNlciIsIlVTRVIiLCJwYXNzd29yZCIsIlBBU1NXT1JEIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xcIiwic291cmNlcyI6WyJjb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XHJcbmRvdGVudi5jb25maWcoKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjbGF2ZXMgPXtcclxuICAgIGhvc3Q6IHByb2Nlc3MuZW52LkhPU1QgfHwgXCJcIixcclxuICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5EQVRBQkFTRSB8fCBcIlwiLFxyXG4gICAgdXNlcjogcHJvY2Vzcy5lbnYuVVNFUiB8fCBcIlwiLFxyXG4gICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBBU1NXT1JEIHx8IFwiXCJcclxufVxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFDNUJHLGVBQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFFUixNQUFNQyxNQUFNLEdBQUFDLE9BQUEsQ0FBQUQsTUFBQSxHQUFFO0VBQ2pCRSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxJQUFJLElBQUksRUFBRTtFQUM1QkMsUUFBUSxFQUFFSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csUUFBUSxJQUFJLEVBQUU7RUFDcENDLElBQUksRUFBRUwsT0FBTyxDQUFDQyxHQUFHLENBQUNLLElBQUksSUFBSSxFQUFFO0VBQzVCQyxRQUFRLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTyxRQUFRLElBQUk7QUFDdEMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_dotenv","_interopRequireDefault","require","obj","__esModule","default","dotenv","config","claves","exports","host","process","env","HOST","database","DATABASE","user","USER","password","PASSWORD"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["config.js"],"sourcesContent":["import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport const claves ={\r\n    host: process.env.HOST || \"\",\r\n    database: process.env.DATABASE || \"\",\r\n    user: process.env.USER || \"\",\r\n    password: process.env.PASSWORD || \"\"\r\n}\r\n\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAC5BG,eAAM,CAACC,MAAM,CAAC,CAAC;AAER,MAAMC,MAAM,GAAAC,OAAA,CAAAD,MAAA,GAAE;EACjBE,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,QAAQ,IAAI,EAAE;EACpCC,IAAI,EAAEL,OAAO,CAACC,GAAG,CAACK,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO,QAAQ,IAAI;AACtC,CAAC","ignoreList":[]}},"mtime":1713464541004},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\app.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\n// routes - rutas\n// import LanguageRoutes from \"./routes/language.routes\"\nconst LanguageRoutes = require('./routes/language.routes');\nconst express = require('express');\nconst morgan = require('morgan');\n// import express from \"express\";\n// import morgan from \"morgan\";\nconst app = express(); //ejecu express\nconst cors = require('cors');\n// settings\napp.set(\"port\", 3000);\n// middleware\napp.use(morgan(\"dev\"));\napp.use(cors({\n  origin: ['http://localhost:3000']\n}));\napp.use(express.json());\n\n// routes\n// app.use(\"/listado\", LanguageRoutes)\napp.use(\"/\", LanguageRoutes);\n// app.use(\"/api/usuarios\")\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMYW5ndWFnZVJvdXRlcyIsInJlcXVpcmUiLCJleHByZXNzIiwibW9yZ2FuIiwiYXBwIiwiY29ycyIsInNldCIsInVzZSIsIm9yaWdpbiIsImpzb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xcIiwic291cmNlcyI6WyJhcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcm91dGVzIC0gcnV0YXNcclxuLy8gaW1wb3J0IExhbmd1YWdlUm91dGVzIGZyb20gXCIuL3JvdXRlcy9sYW5ndWFnZS5yb3V0ZXNcIlxyXG5jb25zdCBMYW5ndWFnZVJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL2xhbmd1YWdlLnJvdXRlcycpO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUgKCdtb3JnYW4nKVxyXG4vLyBpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG4vLyBpbXBvcnQgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjtcclxuY29uc3QgYXBwPWV4cHJlc3MoKTsgLy9lamVjdSBleHByZXNzXHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJylcclxuLy8gc2V0dGluZ3NcclxuYXBwLnNldChcInBvcnRcIiwgMzAwMCk7XHJcbi8vIG1pZGRsZXdhcmVcclxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xyXG5hcHAudXNlKGNvcnMoXHJcbiAgICB7b3JpZ2luOiBbJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcsXX1cclxuKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuLy8gcm91dGVzXHJcbi8vIGFwcC51c2UoXCIvbGlzdGFkb1wiLCBMYW5ndWFnZVJvdXRlcylcclxuYXBwLnVzZShcIi9cIixMYW5ndWFnZVJvdXRlcylcclxuLy8gYXBwLnVzZShcIi9hcGkvdXN1YXJpb3NcIilcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0EsTUFBTUEsY0FBYyxHQUFHQyxPQUFPLENBQUMsMEJBQTBCLENBQUM7QUFDMUQsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFFLFFBQVEsQ0FBQztBQUNqQztBQUNBO0FBQ0EsTUFBTUcsR0FBRyxHQUFDRixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckIsTUFBTUcsSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCO0FBQ0FHLEdBQUcsQ0FBQ0UsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7QUFDckI7QUFDQUYsR0FBRyxDQUFDRyxHQUFHLENBQUNKLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN0QkMsR0FBRyxDQUFDRyxHQUFHLENBQUNGLElBQUksQ0FDUjtFQUFDRyxNQUFNLEVBQUUsQ0FBQyx1QkFBdUI7QUFBRSxDQUN2QyxDQUFDLENBQUM7QUFDRkosR0FBRyxDQUFDRyxHQUFHLENBQUNMLE9BQU8sQ0FBQ08sSUFBSSxDQUFDLENBQUMsQ0FBQzs7QUFFdkI7QUFDQTtBQUNBTCxHQUFHLENBQUNHLEdBQUcsQ0FBQyxHQUFHLEVBQUNQLGNBQWMsQ0FBQztBQUMzQjs7QUFFQVUsTUFBTSxDQUFDQyxPQUFPLEdBQUdQLEdBQUciLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["LanguageRoutes","require","express","morgan","app","cors","set","use","origin","json","module","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["app.js"],"sourcesContent":["// routes - rutas\r\n// import LanguageRoutes from \"./routes/language.routes\"\r\nconst LanguageRoutes = require('./routes/language.routes');\r\nconst express = require('express')\r\nconst morgan = require ('morgan')\r\n// import express from \"express\";\r\n// import morgan from \"morgan\";\r\nconst app=express(); //ejecu express\r\nconst cors = require('cors')\r\n// settings\r\napp.set(\"port\", 3000);\r\n// middleware\r\napp.use(morgan(\"dev\"));\r\napp.use(cors(\r\n    {origin: ['http://localhost:3000',]}\r\n));\r\napp.use(express.json());\r\n\r\n// routes\r\n// app.use(\"/listado\", LanguageRoutes)\r\napp.use(\"/\",LanguageRoutes)\r\n// app.use(\"/api/usuarios\")\r\n\r\nmodule.exports = app;"],"mappings":";;AAAA;AACA;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,MAAM,GAAGF,OAAO,CAAE,QAAQ,CAAC;AACjC;AACA;AACA,MAAMG,GAAG,GAACF,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,MAAMG,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B;AACAG,GAAG,CAACE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AACrB;AACAF,GAAG,CAACG,GAAG,CAACJ,MAAM,CAAC,KAAK,CAAC,CAAC;AACtBC,GAAG,CAACG,GAAG,CAACF,IAAI,CACR;EAACG,MAAM,EAAE,CAAC,uBAAuB;AAAE,CACvC,CAAC,CAAC;AACFJ,GAAG,CAACG,GAAG,CAACL,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA;AACAL,GAAG,CAACG,GAAG,CAAC,GAAG,EAACP,cAAc,CAAC;AAC3B;;AAEAU,MAAM,CAACC,OAAO,GAAGP,GAAG","ignoreList":[]}},"mtime":1713389817403},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\routes\\\\language.routes.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _express = require(\"express\");\nvar _recetas = require(\"../controllers/recetas.controller\");\nvar _user = require(\"../controllers/user.controller\");\n// ruta del proyecto\nconst router = (0, _express.Router)();\n// url principales | http://localhost:3000/\n// router.get(\"/\", recetasController.getRecetas);\nrouter.get(\"/\", (req, res) => {\n  _recetas.methods.getRecetas(req, res);\n});\n// router.get(\"/usuario\", userController.getUser);\nrouter.get(\"/usuario\", (req, res) => {\n  _user.usermethods.getUser(req, res);\n});\n\n// ========= RECETAS =========\n\n// METODOS GET\nrouter.get(\"/receta/:id\", _recetas.methods.getReceta); // http://localhost:3000/receta/numero\nrouter.get(\"/receta-aleatoria\", _recetas.methods.recetaRandom); // http://localhost:3000/receta-aleatoria\nrouter.get(\"/recetas-chile\", _recetas.methods.getRecetaCL); // http://localhost:3000/recetas-chile\nrouter.get(\"/recetas-usa\", _recetas.methods.getRecetaUSA); // http://localhost:3000/recetas-usa\nrouter.get(\"/recetas-gb\", _recetas.methods.getRecetaGB); // http://localhost:3000/recetas-gb\nrouter.get(\"/recetas-canada\", _recetas.methods.getRecetaCA); // http://localhost:3000/recetas-canada\nrouter.get(\"/recetas-es\", _recetas.methods.getRecetaES); // http://localhost:3000/recetas-es\nrouter.get(\"/recetas-mexico\", _recetas.methods.getRecetaMX); // http://localhost:3000/recetas-mexico\nrouter.get(\"/recetas-argentina\", _recetas.methods.getReceta_ARG); // http://localhost:3000/recetas-argentina\nrouter.get(\"/paises\", _recetas.methods.getPaises); // http://localhost:3000/paises\nrouter.get(\"/categorias\", _recetas.methods.getCategorias); // http://localhost:3000/categorias\nrouter.get(\"/categorias-postres\", _recetas.methods.getPostres); // http://localhost:3000/categorias-postres\nrouter.get(\"/categorias-desayuno\", _recetas.methods.getDesayuno); // http://localhost:3000/categorias-desayuno\n// METODOS POST\n// Ruta PUT para agregar una receta\nrouter.put('/add-receta', (req, res) => {\n  res.status(200).send('Receta agregada exitosamente'); // http://localhost:3000/add-receta\n});\n// METODOS PUT\nrouter.put(\"/edit-receta/:id\", _recetas.methods.updateReceta); // http://localhost:3000/edit-receta/numero\n// METODOS DELETE\nrouter.delete(\"/delete-receta/:id\", _recetas.methods.deleteReceta); // http://localhost:3000/delete-receta/numero\n\n// ========= USUARIOS =========\n\n// METODO GET\nrouter.get(\"/\", _user.usermethods.getUser); // http://localhost:3000/usuario\nrouter.get(\"/usuarioejemplo\", _user.usermethods.ejemploUserPaginado); // http://localhost:3000/usuarioejemplo?page=1\n// METODO POST\nrouter.post(\"/usuario\"); // http://localhost:3000/usuario\n// METODO PUT\nrouter.put(\"/usuario\"); // http://localhost:3000/usuario\n// METODO DELETE\nrouter.delete(\"/usuario\"); // http://localhost:3000/usuario\nvar _default = exports.default = router;\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfcmVjZXRhcyIsIl91c2VyIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwicmVjZXRhc0NvbnRyb2xsZXIiLCJnZXRSZWNldGFzIiwidXNlckNvbnRyb2xsZXIiLCJnZXRVc2VyIiwiZ2V0UmVjZXRhIiwicmVjZXRhUmFuZG9tIiwiZ2V0UmVjZXRhQ0wiLCJnZXRSZWNldGFVU0EiLCJnZXRSZWNldGFHQiIsImdldFJlY2V0YUNBIiwiZ2V0UmVjZXRhRVMiLCJnZXRSZWNldGFNWCIsImdldFJlY2V0YV9BUkciLCJnZXRQYWlzZXMiLCJnZXRDYXRlZ29yaWFzIiwiZ2V0UG9zdHJlcyIsImdldERlc2F5dW5vIiwicHV0Iiwic3RhdHVzIiwic2VuZCIsInVwZGF0ZVJlY2V0YSIsImRlbGV0ZSIsImRlbGV0ZVJlY2V0YSIsImVqZW1wbG9Vc2VyUGFnaW5hZG8iLCJwb3N0IiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxwYXRyaVxcT25lRHJpdmVcXERvY3VtZW50b3NcXEdpdEh1YlxcUG9ydGFmb2xpby10aXR1bG9cXEFQSSArIEJCRERcXEFQSSByZWNldGFzXFxzcmNcXHJvdXRlc1xcIiwic291cmNlcyI6WyJsYW5ndWFnZS5yb3V0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcclxuaW1wb3J0IHsgbWV0aG9kcyBhcyByZWNldGFzQ29udHJvbGxlciB9IGZyb20gXCIuLi9jb250cm9sbGVycy9yZWNldGFzLmNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHsgdXNlcm1ldGhvZHMgYXMgdXNlckNvbnRyb2xsZXIgfSBmcm9tIFwiLi4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyXCI7XHJcbi8vIHJ1dGEgZGVsIHByb3llY3RvXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG4vLyB1cmwgcHJpbmNpcGFsZXMgfCBodHRwOi8vbG9jYWxob3N0OjMwMDAvXHJcbi8vIHJvdXRlci5nZXQoXCIvXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YXMpO1xyXG5yb3V0ZXIuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YXMocmVxLCByZXMpO1xyXG59KTtcclxuLy8gcm91dGVyLmdldChcIi91c3VhcmlvXCIsIHVzZXJDb250cm9sbGVyLmdldFVzZXIpO1xyXG5yb3V0ZXIuZ2V0KFwiL3VzdWFyaW9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICB1c2VyQ29udHJvbGxlci5nZXRVc2VyKHJlcSwgcmVzKTtcclxufSk7XHJcblxyXG4vLyA9PT09PT09PT0gUkVDRVRBUyA9PT09PT09PT1cclxuXHJcbi8vIE1FVE9ET1MgR0VUXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhLzppZFwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGEpOyAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvcmVjZXRhL251bWVyb1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YS1hbGVhdG9yaWFcIiwgcmVjZXRhc0NvbnRyb2xsZXIucmVjZXRhUmFuZG9tKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YS1hbGVhdG9yaWFcclxucm91dGVyLmdldChcIi9yZWNldGFzLWNoaWxlXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YUNMKSAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvcmVjZXRhcy1jaGlsZVxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtdXNhXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YVVTQSkgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YXMtdXNhXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1nYlwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFHQikgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YXMtZ2Jcclxucm91dGVyLmdldChcIi9yZWNldGFzLWNhbmFkYVwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFDQSkgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YXMtY2FuYWRhXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1lc1wiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFFUykgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YXMtZXNcclxucm91dGVyLmdldChcIi9yZWNldGFzLW1leGljb1wiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFNWCkgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YXMtbWV4aWNvXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1hcmdlbnRpbmFcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhX0FSRykgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YXMtYXJnZW50aW5hXHJcbnJvdXRlci5nZXQoXCIvcGFpc2VzXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFBhaXNlcykgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3BhaXNlc1xyXG5yb3V0ZXIuZ2V0KFwiL2NhdGVnb3JpYXNcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0Q2F0ZWdvcmlhcykgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL2NhdGVnb3JpYXNcclxucm91dGVyLmdldChcIi9jYXRlZ29yaWFzLXBvc3RyZXNcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UG9zdHJlcykgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL2NhdGVnb3JpYXMtcG9zdHJlc1xyXG5yb3V0ZXIuZ2V0KFwiL2NhdGVnb3JpYXMtZGVzYXl1bm9cIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0RGVzYXl1bm8pIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jYXRlZ29yaWFzLWRlc2F5dW5vXHJcbi8vIE1FVE9ET1MgUE9TVFxyXG4vLyBSdXRhIFBVVCBwYXJhIGFncmVnYXIgdW5hIHJlY2V0YVxyXG5yb3V0ZXIucHV0KCcvYWRkLXJlY2V0YScsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1cygyMDApLnNlbmQoJ1JlY2V0YSBhZ3JlZ2FkYSBleGl0b3NhbWVudGUnKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL2FkZC1yZWNldGFcclxufSk7IFxyXG4vLyBNRVRPRE9TIFBVVFxyXG5yb3V0ZXIucHV0KFwiL2VkaXQtcmVjZXRhLzppZFwiLCByZWNldGFzQ29udHJvbGxlci51cGRhdGVSZWNldGEpOyAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvZWRpdC1yZWNldGEvbnVtZXJvXHJcbi8vIE1FVE9ET1MgREVMRVRFXHJcbnJvdXRlci5kZWxldGUoXCIvZGVsZXRlLXJlY2V0YS86aWRcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZGVsZXRlUmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL2RlbGV0ZS1yZWNldGEvbnVtZXJvXHJcblxyXG5cclxuLy8gPT09PT09PT09IFVTVUFSSU9TID09PT09PT09PVxyXG5cclxuLy8gTUVUT0RPIEdFVFxyXG5yb3V0ZXIuZ2V0KFwiL1wiLCB1c2VyQ29udHJvbGxlci5nZXRVc2VyKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3VzdWFyaW9cclxucm91dGVyLmdldChcIi91c3VhcmlvZWplbXBsb1wiLCB1c2VyQ29udHJvbGxlci5lamVtcGxvVXNlclBhZ2luYWRvKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3VzdWFyaW9lamVtcGxvP3BhZ2U9MVxyXG4vLyBNRVRPRE8gUE9TVFxyXG5yb3V0ZXIucG9zdChcIi91c3VhcmlvXCIpOyAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvdXN1YXJpb1xyXG4vLyBNRVRPRE8gUFVUXHJcbnJvdXRlci5wdXQoXCIvdXN1YXJpb1wiKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3VzdWFyaW9cclxuLy8gTUVUT0RPIERFTEVURVxyXG5yb3V0ZXIuZGVsZXRlKFwiL3VzdWFyaW9cIik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c3VhcmlvXHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxRQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFGLE9BQUE7QUFDQTtBQUNBLE1BQU1HLE1BQU0sR0FBRyxJQUFBQyxlQUFNLEVBQUMsQ0FBQztBQUN2QjtBQUNBO0FBQ0FELE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsS0FBSztFQUMxQkMsZ0JBQWlCLENBQUNDLFVBQVUsQ0FBQ0gsR0FBRyxFQUFFQyxHQUFHLENBQUM7QUFDMUMsQ0FBQyxDQUFDO0FBQ0Y7QUFDQUosTUFBTSxDQUFDRSxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUNDLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ2pDRyxpQkFBYyxDQUFDQyxPQUFPLENBQUNMLEdBQUcsRUFBRUMsR0FBRyxDQUFDO0FBQ3BDLENBQUMsQ0FBQzs7QUFFRjs7QUFFQTtBQUNBSixNQUFNLENBQUNFLEdBQUcsQ0FBQyxhQUFhLEVBQUVHLGdCQUFpQixDQUFDSSxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ3hEVCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRUcsZ0JBQWlCLENBQUNLLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDakVWLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGdCQUFnQixFQUFFRyxnQkFBaUIsQ0FBQ00sV0FBVyxDQUFDLEVBQUM7QUFDNURYLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGNBQWMsRUFBRUcsZ0JBQWlCLENBQUNPLFlBQVksQ0FBQyxFQUFDO0FBQzNEWixNQUFNLENBQUNFLEdBQUcsQ0FBQyxhQUFhLEVBQUVHLGdCQUFpQixDQUFDUSxXQUFXLENBQUMsRUFBQztBQUN6RGIsTUFBTSxDQUFDRSxHQUFHLENBQUMsaUJBQWlCLEVBQUVHLGdCQUFpQixDQUFDUyxXQUFXLENBQUMsRUFBQztBQUM3RGQsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFRyxnQkFBaUIsQ0FBQ1UsV0FBVyxDQUFDLEVBQUM7QUFDekRmLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGlCQUFpQixFQUFFRyxnQkFBaUIsQ0FBQ1csV0FBVyxDQUFDLEVBQUM7QUFDN0RoQixNQUFNLENBQUNFLEdBQUcsQ0FBQyxvQkFBb0IsRUFBRUcsZ0JBQWlCLENBQUNZLGFBQWEsQ0FBQyxFQUFDO0FBQ2xFakIsTUFBTSxDQUFDRSxHQUFHLENBQUMsU0FBUyxFQUFFRyxnQkFBaUIsQ0FBQ2EsU0FBUyxDQUFDLEVBQUM7QUFDbkRsQixNQUFNLENBQUNFLEdBQUcsQ0FBQyxhQUFhLEVBQUVHLGdCQUFpQixDQUFDYyxhQUFhLENBQUMsRUFBQztBQUMzRG5CLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLHFCQUFxQixFQUFFRyxnQkFBaUIsQ0FBQ2UsVUFBVSxDQUFDLEVBQUM7QUFDaEVwQixNQUFNLENBQUNFLEdBQUcsQ0FBQyxzQkFBc0IsRUFBRUcsZ0JBQWlCLENBQUNnQixXQUFXLENBQUMsRUFBQztBQUNsRTtBQUNBO0FBQ0FyQixNQUFNLENBQUNzQixHQUFHLENBQUMsYUFBYSxFQUFFLENBQUNuQixHQUFHLEVBQUVDLEdBQUcsS0FBSztFQUNwQ0EsR0FBRyxDQUFDbUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUMsOEJBQThCLENBQUMsQ0FBQyxDQUFDO0FBQzFELENBQUMsQ0FBQztBQUNGO0FBQ0F4QixNQUFNLENBQUNzQixHQUFHLENBQUMsa0JBQWtCLEVBQUVqQixnQkFBaUIsQ0FBQ29CLFlBQVksQ0FBQyxDQUFDLENBQUM7QUFDaEU7QUFDQXpCLE1BQU0sQ0FBQzBCLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRXJCLGdCQUFpQixDQUFDc0IsWUFBWSxDQUFDLENBQUMsQ0FBQzs7QUFHckU7O0FBRUE7QUFDQTNCLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLEdBQUcsRUFBRUssaUJBQWMsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUN6Q1IsTUFBTSxDQUFDRSxHQUFHLENBQUMsaUJBQWlCLEVBQUVLLGlCQUFjLENBQUNxQixtQkFBbUIsQ0FBQyxDQUFDLENBQUM7QUFDbkU7QUFDQTVCLE1BQU0sQ0FBQzZCLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQ3pCO0FBQ0E3QixNQUFNLENBQUNzQixHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUN4QjtBQUNBdEIsTUFBTSxDQUFDMEIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFBQSxJQUFBSSxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUlaaEMsTUFBTTtBQUVyQmlDLE1BQU0sQ0FBQ0YsT0FBTyxHQUFHL0IsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_express","require","_recetas","_user","router","Router","get","req","res","recetasController","getRecetas","userController","getUser","getReceta","recetaRandom","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPaises","getCategorias","getPostres","getDesayuno","put","status","send","updateReceta","delete","deleteReceta","ejemploUserPaginado","post","_default","exports","default","module"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\routes\\","sources":["language.routes.js"],"sourcesContent":["import { Router } from \"express\";\r\nimport { methods as recetasController } from \"../controllers/recetas.controller\";\r\nimport { usermethods as userController } from \"../controllers/user.controller\";\r\n// ruta del proyecto\r\nconst router = Router();\r\n// url principales | http://localhost:3000/\r\n// router.get(\"/\", recetasController.getRecetas);\r\nrouter.get(\"/\", (req, res) => {\r\n    recetasController.getRecetas(req, res);\r\n});\r\n// router.get(\"/usuario\", userController.getUser);\r\nrouter.get(\"/usuario\", (req, res) => {\r\n    userController.getUser(req, res);\r\n});\r\n\r\n// ========= RECETAS =========\r\n\r\n// METODOS GET\r\nrouter.get(\"/receta/:id\", recetasController.getReceta); // http://localhost:3000/receta/numero\r\nrouter.get(\"/receta-aleatoria\", recetasController.recetaRandom); // http://localhost:3000/receta-aleatoria\r\nrouter.get(\"/recetas-chile\", recetasController.getRecetaCL) // http://localhost:3000/recetas-chile\r\nrouter.get(\"/recetas-usa\", recetasController.getRecetaUSA) // http://localhost:3000/recetas-usa\r\nrouter.get(\"/recetas-gb\", recetasController.getRecetaGB) // http://localhost:3000/recetas-gb\r\nrouter.get(\"/recetas-canada\", recetasController.getRecetaCA) // http://localhost:3000/recetas-canada\r\nrouter.get(\"/recetas-es\", recetasController.getRecetaES) // http://localhost:3000/recetas-es\r\nrouter.get(\"/recetas-mexico\", recetasController.getRecetaMX) // http://localhost:3000/recetas-mexico\r\nrouter.get(\"/recetas-argentina\", recetasController.getReceta_ARG) // http://localhost:3000/recetas-argentina\r\nrouter.get(\"/paises\", recetasController.getPaises) // http://localhost:3000/paises\r\nrouter.get(\"/categorias\", recetasController.getCategorias) // http://localhost:3000/categorias\r\nrouter.get(\"/categorias-postres\", recetasController.getPostres) // http://localhost:3000/categorias-postres\r\nrouter.get(\"/categorias-desayuno\", recetasController.getDesayuno) // http://localhost:3000/categorias-desayuno\r\n// METODOS POST\r\n// Ruta PUT para agregar una receta\r\nrouter.put('/add-receta', (req, res) => {\r\n    res.status(200).send('Receta agregada exitosamente'); // http://localhost:3000/add-receta\r\n}); \r\n// METODOS PUT\r\nrouter.put(\"/edit-receta/:id\", recetasController.updateReceta); // http://localhost:3000/edit-receta/numero\r\n// METODOS DELETE\r\nrouter.delete(\"/delete-receta/:id\", recetasController.deleteReceta); // http://localhost:3000/delete-receta/numero\r\n\r\n\r\n// ========= USUARIOS =========\r\n\r\n// METODO GET\r\nrouter.get(\"/\", userController.getUser); // http://localhost:3000/usuario\r\nrouter.get(\"/usuarioejemplo\", userController.ejemploUserPaginado); // http://localhost:3000/usuarioejemplo?page=1\r\n// METODO POST\r\nrouter.post(\"/usuario\"); // http://localhost:3000/usuario\r\n// METODO PUT\r\nrouter.put(\"/usuario\"); // http://localhost:3000/usuario\r\n// METODO DELETE\r\nrouter.delete(\"/usuario\"); // http://localhost:3000/usuario\r\n\r\n\r\n\r\nexport default router;\r\n\r\nmodule.exports = router"],"mappings":"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","ignoreList":[]}},"mtime":1713830990468},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\language.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\n// PARA OBTENER LOS RESULTADOS\nconst getRecetas = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.Año, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getPaises = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    console.log(result); // Este es el mensaje que se desplegará en la consola\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getCategorias = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT DISTINCT categoria FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    // if (result.length === 0) {\n    //     console.log(\"No hay más resultados disponibles.\");\n    //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\n    // }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR id\nconst getReceta = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.categoria,\n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.id_receta=?`, id);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA AÑADIR ELEMENTOS\nconst addReceta = async (req, res) => {\n  try {\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    } = req.body;\n\n    // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n    //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n    // }\n\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\n    res.json({\n      message: \"Receta añadida exitosamente\"\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA ELIMINAR ELEMENTOS\nconst deleteReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Elemento con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún elemento con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR ELEMENTOS\nconst updateReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    } = req.body;\n    if (nombre_receta == undefined || ingrediente_receta == undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\", [receta, id]);\n\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCL = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='chile';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nconst getRecetaUSA = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = Gran Bretaña\nconst getRecetaGB = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCA = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaES = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='españa';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaMX = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getReceta_ARG = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nconst getPostres = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='postres';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// seleccionar desayunos\nconst getDesayuno = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.Año, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='desayuno';`);\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nconst getUser = async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst ejemploUserPaginado = async (req, res) => {\n  try {\n    const {\n      page\n    } = req.query; // Obtener el número de página de la consulta\n    const itemsPerPage = 10; // Número de resultados por página\n\n    // Calcular el offset basado en la página actual\n    const offset = (page - 1) * itemsPerPage;\n    const connection = await (0, _database.getConnection)();\n\n    // Consulta SQL con LIMIT y OFFSET para la paginación\n    const result = await connection.query(`SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA AÑADIR USUARIOS\nconst addUsuario = async (req, res) => {\n  try {\n    const {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    } = req.body;\n    // console.log(banda)\n    // console.log(disco)\n    if (nombres == undefined || user == undefined) {\n      res.status(400).json({\n        message: \"Bad Request, Por favor, completa los datos.\"\n      });\n    }\n    const usuarionuevo = {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n    res.json({\n      message: `Usuario ${user} añadido exitosamente`\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR USUARIOS\nconst updateUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombres,\n      user,\n      password\n    } = req.body;\n    if (user === undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const usuarioupdate = {\n      nombres,\n      user,\n      password\n    };\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n    res.json({\n      message: `Usuario ${user} Editado exitosamente`\n    });\n    // console.log(result);\n    // res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ELIMINAR ELEMENTOS\nconst deleteUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Usuario con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún usuario con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\nconst methods = exports.methods = {\n  // GET \n  getRecetas,\n  getReceta,\n  getRecetaCL,\n  getRecetaUSA,\n  getRecetaGB,\n  getRecetaCA,\n  getRecetaES,\n  getRecetaMX,\n  getReceta_ARG,\n  getPaises,\n  // CATEGORIAS\n  getCategorias,\n  getPostres,\n  getDesayuno,\n  // POST\n  addReceta,\n  // PUT\n  updateReceta,\n  // DELETE\n  deleteReceta,\n  // gestión usuarios\n  getUser,\n  ejemploUserPaginado,\n  addUsuario,\n  updateUsuario,\n  deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getRecetas","req","res","connection","getConnection","result","query","length","console","log","status","json","message","error","send","getPaises","getCategorias","getReceta","params","id","addReceta","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","body","receta","deleteReceta","affectedRows","updateReceta","undefined","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPostres","getDesayuno","getUser","ejemploUserPaginado","page","itemsPerPage","offset","addUsuario","nombres","user","password","fecha_creacion","usuarionuevo","updateUsuario","usuarioupdate","deleteUsuario","methods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["language.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.Año, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        console.log(result); // Este es el mensaje que se desplegará en la consola\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n        `SELECT DISTINCT categoria FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        // if (result.length === 0) {\r\n        //     console.log(\"No hay más resultados disponibles.\");\r\n        //     return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        // }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.categoria,\r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='chile';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='españa';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                        // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='postres';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.Año, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='desayuno';`);\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const result = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const result = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1713150854296},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\database\\\\database.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\n// import mysql from \"promise-mysql\";\n// import { claves } from \"./../config\";\n\n// const connection = mysql.createConnection({\n//     host: claves.host,\n//     database: claves.database,\n//     user: claves.user,\n//     password: claves.password\n// });\n\n// const getConnection = () => {\n//     return connection;\n// }\n\n// module.exports = {\n//     getConnection\n// }\n\nconst {\n  Sequelize\n} = require('sequelize');\nconst {\n  claves\n} = require('./../config');\n// Configuración de Sequelize\nconst sequelize = new Sequelize(claves.database, claves.user, claves.password, {\n  host: claves.host,\n  dialect: 'mysql'\n});\n\n// Definición del modelo de conexión\nconst Connection = sequelize.define('Connection');\n\n// Función para obtener la conexión\nconst getConnection = async () => {\n  try {\n    // Autenticar la conexión\n    await sequelize.authenticate();\n    console.log('Conexión establecida correctamente.');\n    return sequelize;\n  } catch (error) {\n    console.error('No se pudo conectar a la base de datos:', error);\n    throw error;\n  }\n};\n\n// Exportar la función de conexión\nmodule.exports = {\n  getConnection,\n  Connection\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTZXF1ZWxpemUiLCJyZXF1aXJlIiwiY2xhdmVzIiwic2VxdWVsaXplIiwiZGF0YWJhc2UiLCJ1c2VyIiwicGFzc3dvcmQiLCJob3N0IiwiZGlhbGVjdCIsIkNvbm5lY3Rpb24iLCJkZWZpbmUiLCJnZXRDb25uZWN0aW9uIiwiYXV0aGVudGljYXRlIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxwYXRyaVxcT25lRHJpdmVcXERvY3VtZW50b3NcXEdpdEh1YlxcUG9ydGFmb2xpby10aXR1bG9cXEFQSSArIEJCRERcXEFQSSByZWNldGFzXFxzcmNcXGRhdGFiYXNlXFwiLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBteXNxbCBmcm9tIFwicHJvbWlzZS1teXNxbFwiO1xyXG4vLyBpbXBvcnQgeyBjbGF2ZXMgfSBmcm9tIFwiLi8uLi9jb25maWdcIjtcclxuXHJcbi8vIGNvbnN0IGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuLy8gICAgIGhvc3Q6IGNsYXZlcy5ob3N0LFxyXG4vLyAgICAgZGF0YWJhc2U6IGNsYXZlcy5kYXRhYmFzZSxcclxuLy8gICAgIHVzZXI6IGNsYXZlcy51c2VyLFxyXG4vLyAgICAgcGFzc3dvcmQ6IGNsYXZlcy5wYXNzd29yZFxyXG4vLyB9KTtcclxuXHJcbi8vIGNvbnN0IGdldENvbm5lY3Rpb24gPSAoKSA9PiB7XHJcbi8vICAgICByZXR1cm4gY29ubmVjdGlvbjtcclxuLy8gfVxyXG5cclxuLy8gbW9kdWxlLmV4cG9ydHMgPSB7XHJcbi8vICAgICBnZXRDb25uZWN0aW9uXHJcbi8vIH1cclxuXHJcblxyXG5jb25zdCB7IFNlcXVlbGl6ZSB9ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcbmNvbnN0IHsgY2xhdmVzIH0gPSByZXF1aXJlKCcuLy4uL2NvbmZpZycpO1xyXG4vLyBDb25maWd1cmFjacOzbiBkZSBTZXF1ZWxpemVcclxuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjbGF2ZXMuZGF0YWJhc2UsIGNsYXZlcy51c2VyLCBjbGF2ZXMucGFzc3dvcmQsIHtcclxuICBob3N0OiBjbGF2ZXMuaG9zdCxcclxuICBkaWFsZWN0OiAnbXlzcWwnLFxyXG59KTtcclxuXHJcbi8vIERlZmluaWNpw7NuIGRlbCBtb2RlbG8gZGUgY29uZXhpw7NuXHJcbmNvbnN0IENvbm5lY3Rpb24gPSBzZXF1ZWxpemUuZGVmaW5lKCdDb25uZWN0aW9uJyk7XHJcblxyXG4vLyBGdW5jacOzbiBwYXJhIG9idGVuZXIgbGEgY29uZXhpw7NuXHJcbmNvbnN0IGdldENvbm5lY3Rpb24gPSBhc3luYyAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIEF1dGVudGljYXIgbGEgY29uZXhpw7NuXHJcbiAgICBhd2FpdCBzZXF1ZWxpemUuYXV0aGVudGljYXRlKCk7XHJcbiAgICBjb25zb2xlLmxvZygnQ29uZXhpw7NuIGVzdGFibGVjaWRhIGNvcnJlY3RhbWVudGUuJyk7XHJcbiAgICByZXR1cm4gc2VxdWVsaXplO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdObyBzZSBwdWRvIGNvbmVjdGFyIGEgbGEgYmFzZSBkZSBkYXRvczonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vLyBFeHBvcnRhciBsYSBmdW5jacOzbiBkZSBjb25leGnDs25cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgZ2V0Q29ubmVjdGlvbixcclxuICBDb25uZWN0aW9uLFxyXG59O1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFHQSxNQUFNO0VBQUVBO0FBQVUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsV0FBVyxDQUFDO0FBQzFDLE1BQU07RUFBRUM7QUFBTyxDQUFDLEdBQUdELE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFDekM7QUFDQSxNQUFNRSxTQUFTLEdBQUcsSUFBSUgsU0FBUyxDQUFDRSxNQUFNLENBQUNFLFFBQVEsRUFBRUYsTUFBTSxDQUFDRyxJQUFJLEVBQUVILE1BQU0sQ0FBQ0ksUUFBUSxFQUFFO0VBQzdFQyxJQUFJLEVBQUVMLE1BQU0sQ0FBQ0ssSUFBSTtFQUNqQkMsT0FBTyxFQUFFO0FBQ1gsQ0FBQyxDQUFDOztBQUVGO0FBQ0EsTUFBTUMsVUFBVSxHQUFHTixTQUFTLENBQUNPLE1BQU0sQ0FBQyxZQUFZLENBQUM7O0FBRWpEO0FBQ0EsTUFBTUMsYUFBYSxHQUFHLE1BQUFBLENBQUEsS0FBWTtFQUNoQyxJQUFJO0lBQ0Y7SUFDQSxNQUFNUixTQUFTLENBQUNTLFlBQVksQ0FBQyxDQUFDO0lBQzlCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxxQ0FBcUMsQ0FBQztJQUNsRCxPQUFPWCxTQUFTO0VBQ2xCLENBQUMsQ0FBQyxPQUFPWSxLQUFLLEVBQUU7SUFDZEYsT0FBTyxDQUFDRSxLQUFLLENBQUMseUNBQXlDLEVBQUVBLEtBQUssQ0FBQztJQUMvRCxNQUFNQSxLQUFLO0VBQ2I7QUFDRixDQUFDOztBQUVEO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2ZOLGFBQWE7RUFDYkY7QUFDRixDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["Sequelize","require","claves","sequelize","database","user","password","host","dialect","Connection","define","getConnection","authenticate","console","log","error","module","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\database\\","sources":["database.js"],"sourcesContent":["// import mysql from \"promise-mysql\";\r\n// import { claves } from \"./../config\";\r\n\r\n// const connection = mysql.createConnection({\r\n//     host: claves.host,\r\n//     database: claves.database,\r\n//     user: claves.user,\r\n//     password: claves.password\r\n// });\r\n\r\n// const getConnection = () => {\r\n//     return connection;\r\n// }\r\n\r\n// module.exports = {\r\n//     getConnection\r\n// }\r\n\r\n\r\nconst { Sequelize } = require('sequelize');\r\nconst { claves } = require('./../config');\r\n// Configuración de Sequelize\r\nconst sequelize = new Sequelize(claves.database, claves.user, claves.password, {\r\n  host: claves.host,\r\n  dialect: 'mysql',\r\n});\r\n\r\n// Definición del modelo de conexión\r\nconst Connection = sequelize.define('Connection');\r\n\r\n// Función para obtener la conexión\r\nconst getConnection = async () => {\r\n  try {\r\n    // Autenticar la conexión\r\n    await sequelize.authenticate();\r\n    console.log('Conexión establecida correctamente.');\r\n    return sequelize;\r\n  } catch (error) {\r\n    console.error('No se pudo conectar a la base de datos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Exportar la función de conexión\r\nmodule.exports = {\r\n  getConnection,\r\n  Connection,\r\n};\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC1C,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC;AACA,MAAME,SAAS,GAAG,IAAIH,SAAS,CAACE,MAAM,CAACE,QAAQ,EAAEF,MAAM,CAACG,IAAI,EAAEH,MAAM,CAACI,QAAQ,EAAE;EAC7EC,IAAI,EAAEL,MAAM,CAACK,IAAI;EACjBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,MAAMC,UAAU,GAAGN,SAAS,CAACO,MAAM,CAAC,YAAY,CAAC;;AAEjD;AACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF;IACA,MAAMR,SAAS,CAACS,YAAY,CAAC,CAAC;IAC9BC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,OAAOX,SAAS;EAClB,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACAC,MAAM,CAACC,OAAO,GAAG;EACfN,aAAa;EACbF;AACF,CAAC","ignoreList":[]}},"mtime":1713465476247},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\config.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.claves = void 0;\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n_dotenv.default.config();\nconst claves = exports.claves = {\n  host: process.env.HOST || \"\",\n  database: process.env.DATABASE || \"\",\n  user: process.env.USER || \"\",\n  password: process.env.PASSWORD || \"\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZG90ZW52IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImRvdGVudiIsImNvbmZpZyIsImNsYXZlcyIsImV4cG9ydHMiLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJkYXRhYmFzZSIsIkRBVEFCQVNFIiwidXNlciIsIlVTRVIiLCJwYXNzd29yZCIsIlBBU1NXT1JEIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBhdHJpXFxPbmVEcml2ZVxcRG9jdW1lbnRvc1xcR2l0SHViXFxQb3J0YWZvbGlvLXRpdHVsb1xcQVBJICsgQkJERFxcQVBJIHJlY2V0YXNcXHNyY1xcIiwic291cmNlcyI6WyJjb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XHJcbmRvdGVudi5jb25maWcoKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjbGF2ZXMgPXtcclxuICAgIGhvc3Q6IHByb2Nlc3MuZW52LkhPU1QgfHwgXCJcIixcclxuICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5EQVRBQkFTRSB8fCBcIlwiLFxyXG4gICAgdXNlcjogcHJvY2Vzcy5lbnYuVVNFUiB8fCBcIlwiLFxyXG4gICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBBU1NXT1JEIHx8IFwiXCJcclxufVxyXG5cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFDNUJHLGVBQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFFUixNQUFNQyxNQUFNLEdBQUFDLE9BQUEsQ0FBQUQsTUFBQSxHQUFFO0VBQ2pCRSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxJQUFJLElBQUksRUFBRTtFQUM1QkMsUUFBUSxFQUFFSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csUUFBUSxJQUFJLEVBQUU7RUFDcENDLElBQUksRUFBRUwsT0FBTyxDQUFDQyxHQUFHLENBQUNLLElBQUksSUFBSSxFQUFFO0VBQzVCQyxRQUFRLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTyxRQUFRLElBQUk7QUFDdEMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_dotenv","_interopRequireDefault","require","obj","__esModule","default","dotenv","config","claves","exports","host","process","env","HOST","database","DATABASE","user","USER","password","PASSWORD"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\","sources":["config.js"],"sourcesContent":["import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport const claves ={\r\n    host: process.env.HOST || \"\",\r\n    database: process.env.DATABASE || \"\",\r\n    user: process.env.USER || \"\",\r\n    password: process.env.PASSWORD || \"\"\r\n}\r\n\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAC5BG,eAAM,CAACC,MAAM,CAAC,CAAC;AAER,MAAMC,MAAM,GAAAC,OAAA,CAAAD,MAAA,GAAE;EACjBE,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,QAAQ,IAAI,EAAE;EACpCC,IAAI,EAAEL,OAAO,CAACC,GAAG,CAACK,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO,QAAQ,IAAI;AACtC,CAAC","ignoreList":[]}},"mtime":1713464541004},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\recetas.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\n// PARA OBTENER LOS RESULTADOS\nconst getRecetas = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.anio, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getPaises = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst recetaRandom = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT *\n        FROM recetas\n        ORDER BY RAND()\n        LIMIT 1;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getCategorias = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT DISTINCT categoria FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR id\nconst getReceta = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.categoria,\n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.id_receta=?`, id);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA AÑADIR ELEMENTOS\nconst addReceta = async (req, res) => {\n  try {\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    } = req.body;\n\n    // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n    //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n    // }\n\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\n    res.json({\n      message: \"Receta añadida exitosamente\"\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA ELIMINAR ELEMENTOS\nconst deleteReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Elemento con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún elemento con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR ELEMENTOS\nconst updateReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    } = req.body;\n    if (nombre_receta == undefined || ingrediente_receta == undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\", [receta, id]);\n\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCL = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='chile';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nconst getRecetaUSA = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = Gran Bretaña\nconst getRecetaGB = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCA = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaES = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='españa';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaMX = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getReceta_ARG = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nconst getPostres = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='postres';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// seleccionar desayunos\nconst getDesayuno = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='desayuno';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst methods = exports.methods = {\n  // GET \n  getRecetas,\n  getReceta,\n  getRecetaCL,\n  getRecetaUSA,\n  getRecetaGB,\n  getRecetaCA,\n  getRecetaES,\n  getRecetaMX,\n  getReceta_ARG,\n  getPaises,\n  recetaRandom,\n  // CATEGORIAS\n  getCategorias,\n  getPostres,\n  getDesayuno,\n  // POST\n  addReceta,\n  // PUT\n  updateReceta,\n  // DELETE\n  deleteReceta\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getRecetas","req","res","connection","getConnection","result","query","length","console","log","status","json","message","error","send","getPaises","recetaRandom","getCategorias","getReceta","id","params","addReceta","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","body","receta","deleteReceta","affectedRows","updateReceta","undefined","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPostres","getDesayuno","methods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["recetas.controller.js"],"sourcesContent":["import { Connection, getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.anio, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst recetaRandom = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT *\r\n        FROM recetas\r\n        ORDER BY RAND()\r\n        LIMIT 1;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT DISTINCT categoria FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.categoria,\r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='chile';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='españa';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='postres';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='desayuno';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises, recetaRandom,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1713830947862},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\user.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usermethods = void 0;\nvar _database = require(\"./../database/database\");\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nconst getUser = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst ejemploUserPaginado = async (req, res) => {\n  try {\n    const {\n      page\n    } = req.query; // Obtener el número de página de la consulta\n    const itemsPerPage = 10; // Número de resultados por página\n\n    // Calcular el offset basado en la página actual\n    const offset = (page - 1) * itemsPerPage;\n    const connection = await (0, _database.getConnection)();\n\n    // Consulta SQL con LIMIT y OFFSET para la paginación\n    const [result] = await connection.query(`SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA AÑADIR USUARIOS\nconst addUsuario = async (req, res) => {\n  try {\n    const {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    } = req.body;\n    // console.log(banda)\n    // console.log(disco)\n    if (nombres == undefined || user == undefined) {\n      res.status(400).json({\n        message: \"Bad Request, Por favor, completa los datos.\"\n      });\n    }\n    const usuarionuevo = {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n    res.json({\n      message: `Usuario ${user} añadido exitosamente`\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR USUARIOS\nconst updateUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombres,\n      user,\n      password\n    } = req.body;\n    if (user === undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const usuarioupdate = {\n      nombres,\n      user,\n      password\n    };\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n    res.json({\n      message: `Usuario ${user} Editado exitosamente`\n    });\n    // console.log(result);\n    // res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ELIMINAR ELEMENTOS\nconst deleteUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Usuario con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún usuario con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\nconst usermethods = exports.usermethods = {\n  // gestión usuarios\n  getUser,\n  ejemploUserPaginado,\n  addUsuario,\n  updateUsuario,\n  deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getUser","req","res","id","params","connection","getConnection","result","query","length","status","json","message","error","send","ejemploUserPaginado","page","itemsPerPage","offset","addUsuario","nombres","user","password","fecha_creacion","body","undefined","usuarionuevo","updateUsuario","usuarioupdate","deleteUsuario","affectedRows","usermethods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["user.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const [result] = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const usermethods = {\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};"],"mappings":";;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA,MAAMC,OAAO,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAEhC,IAAI;IACA;IACA,MAAM;MAAEC;IAAG,CAAC,GAAGF,GAAG,CAACG,MAAM;IACzB,MAAMC,UAAU,GAAG,MAAM,IAAAC,uBAAa,EAAC,CAAC;IACxC,MAAM,CAACC,MAAM,CAAC,GAAG,MAAMF,UAAU,CAACG,KAAK,CAAC,0DAA0D,CAAC;IACnG;IACA;IACA,IAAID,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE;MACrB,OAAOP,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAwC,CAAC,CAAC;IACrF;IACAV,GAAG,CAACS,IAAI,CAACJ,MAAM,CAAC;EACpB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZX,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC;IACfR,GAAG,CAACY,IAAI,CAACD,KAAK,CAACD,OAAO,CAAC;EAC3B;AACJ,CAAC;AAED,MAAMG,mBAAmB,GAAG,MAAAA,CAAOd,GAAG,EAAEC,GAAG,KAAK;EAC5C,IAAI;IACA,MAAM;MAAEc;IAAK,CAAC,GAAGf,GAAG,CAACO,KAAK,CAAC,CAAC;IAC5B,MAAMS,YAAY,GAAG,EAAE,CAAC,CAAC;;IAEzB;IACA,MAAMC,MAAM,GAAG,CAACF,IAAI,GAAG,CAAC,IAAIC,YAAY;IAExC,MAAMZ,UAAU,GAAG,MAAM,IAAAC,uBAAa,EAAC,CAAC;;IAExC;IACA,MAAM,CAACC,MAAM,CAAC,GAAG,MAAMF,UAAU,CAACG,KAAK,CAClC,qEAAoES,YAAa,WAAUC,MAAO,EACvG,CAAC;;IAED;IACA,IAAIX,MAAM,CAACE,MAAM,KAAK,CAAC,EAAE;MACrB,OAAOP,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAqC,CAAC,CAAC;IAClF;IAEAV,GAAG,CAACS,IAAI,CAACJ,MAAM,CAAC;EACpB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZX,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACI,IAAI,CAACD,KAAK,CAACD,OAAO,CAAC;EACvC;AACJ,CAAC;;AAGD;AACA,MAAMO,UAAU,GAAG,MAAAA,CAAOlB,GAAG,EAAEC,GAAG,KAAK;EAEnC,IAAI;IACA,MAAM;MAAEkB,OAAO;MAAEC,IAAI;MAAEC,QAAQ;MAAEC;IAAe,CAAC,GAAGtB,GAAG,CAACuB,IAAI;IAC5D;IACA;IACA,IAAIJ,OAAO,IAAIK,SAAS,IAAIJ,IAAI,IAAII,SAAS,EAAE;MAC3CvB,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA8C,CAAC,CAAC;IACpF;IACA,MAAMc,YAAY,GAAG;MACjBN,OAAO;MAAEC,IAAI;MAAEC,QAAQ;MAAEC;IAC7B,CAAC;IACD,MAAMlB,UAAU,GAAG,MAAM,IAAAC,uBAAa,EAAC,CAAC;IACxC,MAAMD,UAAU,CAACG,KAAK,CAAC,4BAA4B,EAAEkB,YAAY,CAAC;IAClExB,GAAG,CAACS,IAAI,CAAC;MAAEC,OAAO,EAAG,WAAUS,IAAK;IAAsB,CAAC,CAAC;EAChE,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZX,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC;IACfR,GAAG,CAACY,IAAI,CAACD,KAAK,CAACD,OAAO,CAAC;EAC3B;AACJ,CAAC;;AAED;AACA,MAAMe,aAAa,GAAG,MAAAA,CAAO1B,GAAG,EAAEC,GAAG,KAAK;EAEtC,IAAI;IACA,MAAM;MAAEC;IAAG,CAAC,GAAGF,GAAG,CAACG,MAAM;IACzB,MAAM;MAAEgB,OAAO;MAAEC,IAAI;MAAEC;IAAU,CAAC,GAAGrB,GAAG,CAACuB,IAAI;IAC7C,IAAIH,IAAI,KAAKI,SAAS,EAAE;MACpB,OAAOvB,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA+C,CAAC,CAAC;IAC5F;IACA,MAAMgB,aAAa,GAAG;MAClBR,OAAO;MAAEC,IAAI;MAAEC;IACnB,CAAC;IAED,MAAMjB,UAAU,GAAG,MAAM,IAAAC,uBAAa,EAAC,CAAC;IACxC,MAAM,CAACC,MAAM,CAAC,GAAG,MAAMF,UAAU,CAACG,KAAK,CAAC,0CAA0C,EAAC,CAACoB,aAAa,EAACzB,EAAE,CAAC,CAAC;IACtGD,GAAG,CAACS,IAAI,CAAE;MAAEC,OAAO,EAAG,WAAUS,IAAK;IAAsB,CAAC,CAAC;IAC7D;IACA;EACJ,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZX,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC;IACfR,GAAG,CAACY,IAAI,CAACD,KAAK,CAACD,OAAO,CAAC;EAC3B;AACJ,CAAC;;AAGD;AACA,MAAMiB,aAAa,GAAG,MAAAA,CAAO5B,GAAG,EAAEC,GAAG,KAAK;EACtC,IAAI;IACA,MAAM;MAAEC;IAAG,CAAC,GAAGF,GAAG,CAACG,MAAM;IACzB,MAAMC,UAAU,GAAG,MAAM,IAAAC,uBAAa,EAAC,CAAC;IACxC,MAAM,CAACC,MAAM,CAAC,GAAG,MAAMF,UAAU,CAACG,KAAK,CAAC,yCAAyC,EAAEL,EAAE,CAAC;IAEtF,IAAII,MAAM,CAACuB,YAAY,GAAG,CAAC,EAAE;MACzB;MACA5B,GAAG,CAACS,IAAI,CAAC;QAAEC,OAAO,EAAG,kBAAiBT,EAAG;MAAwB,CAAC,CAAC;IACvE,CAAC,MAAM;MACH;MACAD,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAG,2CAA0CT,EAAG;MAAG,CAAC,CAAC;IACvF;EACJ,CAAC,CAAC,OAAOU,KAAK,EAAE;IACZ;IACAX,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACI,IAAI,CAACD,KAAK,CAACD,OAAO,CAAC;EACvC;AACJ,CAAC;AAGM,MAAMmB,WAAW,GAAAC,OAAA,CAAAD,WAAA,GAAG;EACvB;EACA/B,OAAO;EAAEe,mBAAmB;EAAEI,UAAU;EAAEQ,aAAa;EAAEE;AAE7D,CAAC","ignoreList":[]}},"mtime":1713466455837},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\recetas.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\n// PARA OBTENER LOS RESULTADOS\nconst getRecetas = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.anio, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getPaises = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst recetaRandom = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n        recetas_del_mundo.id_receta, \n        recetas_del_mundo.nombre_receta, \n        recetas_del_mundo.ingrediente_receta, \n        recetas_del_mundo.anio, \n        recetas_del_mundo.pais_receta, \n        recetas_del_mundo.preparacion_receta, \n        recetas_del_mundo.fecha_creacion, \n        recetas_del_mundo.url_imagen_receta, \n        recetas_del_mundo.categoria,\n        usuarios.nombres as \"creado_por\" \n        FROM recetas_del_mundo\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n        ORDER BY RAND()\n        LIMIT 1;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENER LOS RESULTADOS\nconst getCategorias = async (req, res) => {\n  try {\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT DISTINCT categoria FROM recetas_del_mundo;`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      console.log(\"No hay más resultados disponibles.\");\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR id\nconst getReceta = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.categoria,\n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.id_receta=?`, id);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA AÑADIR ELEMENTOS\nconst addReceta = async (req, res) => {\n  try {\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    } = req.body;\n\n    // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n    //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n    // }\n\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      preparacion_receta,\n      categoria,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\n    res.json({\n      message: \"Receta añadida exitosamente\"\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA ELIMINAR ELEMENTOS\nconst deleteReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Elemento con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún elemento con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR ELEMENTOS\nconst updateReceta = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    } = req.body;\n    if (nombre_receta == undefined || ingrediente_receta == undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const receta = {\n      nombre_receta,\n      ingrediente_receta,\n      pais_receta,\n      categoria,\n      preparacion_receta,\n      id_user\n    };\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\", [receta, id]);\n\n    // console.log(result);\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCL = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='chile';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nconst getRecetaUSA = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = Gran Bretaña\nconst getRecetaGB = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaCA = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaES = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='españa';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getRecetaMX = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// PARA OBTENERLOS POR pais = chile\nconst getReceta_ARG = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nconst getPostres = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='postres';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// seleccionar desayunos\nconst getDesayuno = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(`SELECT  \n            recetas_del_mundo.id_receta, \n            recetas_del_mundo.nombre_receta, \n            recetas_del_mundo.ingrediente_receta, \n            recetas_del_mundo.anio, \n            recetas_del_mundo.pais_receta, \n            recetas_del_mundo.preparacion_receta, \n            recetas_del_mundo.fecha_creacion, \n            recetas_del_mundo.url_imagen_receta, \n            recetas_del_mundo.categoria, \n            usuarios.nombres as \"creado_por\" \n            FROM recetas_del_mundo\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\n            WHERE recetas_del_mundo.categoria='desayuno';`);\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst methods = exports.methods = {\n  // GET \n  getRecetas,\n  getReceta,\n  getRecetaCL,\n  getRecetaUSA,\n  getRecetaGB,\n  getRecetaCA,\n  getRecetaES,\n  getRecetaMX,\n  getReceta_ARG,\n  getPaises,\n  recetaRandom,\n  // CATEGORIAS\n  getCategorias,\n  getPostres,\n  getDesayuno,\n  // POST\n  addReceta,\n  // PUT\n  updateReceta,\n  // DELETE\n  deleteReceta\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getRecetas","req","res","connection","getConnection","result","query","length","console","log","status","json","message","error","send","getPaises","recetaRandom","getCategorias","getReceta","id","params","addReceta","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","body","receta","deleteReceta","affectedRows","updateReceta","undefined","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPostres","getDesayuno","methods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["recetas.controller.js"],"sourcesContent":["import { Connection, getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.anio, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst recetaRandom = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT  \r\n        recetas_del_mundo.id_receta, \r\n        recetas_del_mundo.nombre_receta, \r\n        recetas_del_mundo.ingrediente_receta, \r\n        recetas_del_mundo.anio, \r\n        recetas_del_mundo.pais_receta, \r\n        recetas_del_mundo.preparacion_receta, \r\n        recetas_del_mundo.fecha_creacion, \r\n        recetas_del_mundo.url_imagen_receta, \r\n        recetas_del_mundo.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM recetas_del_mundo\r\n        INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n        ORDER BY RAND()\r\n        LIMIT 1;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT DISTINCT categoria FROM recetas_del_mundo;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.categoria,\r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO recetas_del_mundo SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"DELETE FROM recetas_del_mundo WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"UPDATE recetas_del_mundo SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='chile';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='españa';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='postres';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            recetas_del_mundo.id_receta, \r\n            recetas_del_mundo.nombre_receta, \r\n            recetas_del_mundo.ingrediente_receta, \r\n            recetas_del_mundo.anio, \r\n            recetas_del_mundo.pais_receta, \r\n            recetas_del_mundo.preparacion_receta, \r\n            recetas_del_mundo.fecha_creacion, \r\n            recetas_del_mundo.url_imagen_receta, \r\n            recetas_del_mundo.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM recetas_del_mundo\r\n            INNER JOIN usuarios ON recetas_del_mundo.id_user = usuarios.id_user\r\n            WHERE recetas_del_mundo.categoria='desayuno';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises, recetaRandom,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1713831695717},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"filename\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\\\\src\\\\controllers\\\\user.controller.js\",\"targets\":{\"chrome\":\"79.0.0\",\"edge\":\"79.0.0\",\"firefox\":\"70.0.0\",\"ios\":\"14.0.0\",\"safari\":\"14.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Portafolio-titulo\\\\API + BBDD\\\\API recetas\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usermethods = void 0;\nvar _database = require(\"./../database/database\");\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nconst getUser = async (req, res) => {\n  try {\n    // console.log(req.params)\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n    // console.log(result);\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"La receta no se encuentra disponible.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\nconst ejemploUserPaginado = async (req, res) => {\n  try {\n    const {\n      page\n    } = req.query; // Obtener el número de página de la consulta\n    const itemsPerPage = 10; // Número de resultados por página\n\n    // Calcular el offset basado en la página actual\n    const offset = (page - 1) * itemsPerPage;\n    const connection = await (0, _database.getConnection)();\n\n    // Consulta SQL con LIMIT y OFFSET para la paginación\n    const [result] = await connection.query(`SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`);\n\n    // Verificar si hay resultados\n    if (result.length === 0) {\n      return res.status(404).json({\n        message: \"No hay más resultados disponibles.\"\n      });\n    }\n    res.json(result);\n  } catch (error) {\n    res.status(500).send(error.message);\n  }\n};\n\n// PARA AÑADIR USUARIOS\nconst addUsuario = async (req, res) => {\n  try {\n    const {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    } = req.body;\n    // console.log(banda)\n    // console.log(disco)\n    if (nombres == undefined || user == undefined) {\n      res.status(400).json({\n        message: \"Bad Request, Por favor, completa los datos.\"\n      });\n    }\n    const usuarionuevo = {\n      nombres,\n      user,\n      password,\n      fecha_creacion\n    };\n    const connection = await (0, _database.getConnection)();\n    await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n    res.json({\n      message: `Usuario ${user} añadido exitosamente`\n    });\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ACTUALIZAR USUARIOS\nconst updateUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const {\n      nombres,\n      user,\n      password\n    } = req.body;\n    if (user === undefined) {\n      return res.status(400).json({\n        message: \"Bad Request, Por favor, completar los datos.\"\n      });\n    }\n    const usuarioupdate = {\n      nombres,\n      user,\n      password\n    };\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n    res.json({\n      message: `Usuario ${user} Editado exitosamente`\n    });\n    // console.log(result);\n    // res.json(result);\n  } catch (error) {\n    res.status(500);\n    res.send(error.message);\n  }\n};\n\n// PARA ELIMINAR ELEMENTOS\nconst deleteUsuario = async (req, res) => {\n  try {\n    const {\n      id\n    } = req.params;\n    const connection = await (0, _database.getConnection)();\n    const [result] = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n    if (result.affectedRows > 0) {\n      // Elemento borrado exitosamente\n      res.json({\n        message: `Usuario con ID ${id} borrado exitosamente.`\n      });\n    } else {\n      // No se encontró ningún elemento con el ID proporcionado\n      res.status(404).json({\n        message: `No se encontró ningún usuario con el ID ${id}.`\n      });\n    }\n  } catch (error) {\n    // Error en la solicitud\n    res.status(500).send(error.message);\n  }\n};\nconst usermethods = exports.usermethods = {\n  // gestión usuarios\n  getUser,\n  ejemploUserPaginado,\n  addUsuario,\n  updateUsuario,\n  deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","getUser","req","res","id","params","connection","getConnection","result","query","length","status","json","message","error","send","ejemploUserPaginado","page","itemsPerPage","offset","addUsuario","nombres","user","password","fecha_creacion","body","undefined","usuarionuevo","updateUsuario","usuarioupdate","deleteUsuario","affectedRows","usermethods","exports"],"sourceRoot":"C:\\Users\\patri\\OneDrive\\Documentos\\GitHub\\Portafolio-titulo\\API + BBDD\\API recetas\\src\\controllers\\","sources":["user.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const [result] = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const usermethods = {\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};"],"mappings":"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","ignoreList":[]}},"mtime":1713466455837},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nvar app = require(\"./app\");\n// import app from \"./app\"\nvar main = function main() {\n  app.listen(app.get(\"port\"));\n  console.log(\"Server on Port  \".concat(app.get(\"port\")));\n};\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwibWFpbiIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciLCJjb25jYXQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccGxhemF2ZXNwdWNpb1xcRG9jdW1lbnRzXFxHaXRIdWJcXEFTWVM1MTMxLUZlcnJldGVyaWFcXEFQSSArIEJCRERcXEFQSSBGZXJyZXRlcmlhXFxzcmNcXCIsInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXBwID0gcmVxdWlyZShcIi4vYXBwXCIpO1xyXG4vLyBpbXBvcnQgYXBwIGZyb20gXCIuL2FwcFwiXHJcbmNvbnN0IG1haW49KCk9PntcclxuICAgIGFwcC5saXN0ZW4oYXBwLmdldChcInBvcnRcIikpO1xyXG4gICAgY29uc29sZS5sb2coYFNlcnZlciBvbiBQb3J0ICAke2FwcC5nZXQoXCJwb3J0XCIpfWApXHJcbn07XHJcblxyXG5tYWluKCk7Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM1QjtBQUNBLElBQU1DLElBQUksR0FBQyxTQUFMQSxJQUFJQSxDQUFBLEVBQUs7RUFDWEYsR0FBRyxDQUFDRyxNQUFNLENBQUNILEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0VBQzNCQyxPQUFPLENBQUNDLEdBQUcsb0JBQUFDLE1BQUEsQ0FBb0JQLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFFLENBQUM7QUFDckQsQ0FBQztBQUVERixJQUFJLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["app","require","main","listen","get","console","log","concat"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\","sources":["index.js"],"sourcesContent":["const app = require(\"./app\");\r\n// import app from \"./app\"\r\nconst main=()=>{\r\n    app.listen(app.get(\"port\"));\r\n    console.log(`Server on Port  ${app.get(\"port\")}`)\r\n};\r\n\r\nmain();"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC5B;AACA,IAAMC,IAAI,GAAC,SAALA,IAAIA,CAAA,EAAK;EACXF,GAAG,CAACG,MAAM,CAACH,GAAG,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC;EAC3BC,OAAO,CAACC,GAAG,oBAAAC,MAAA,CAAoBP,GAAG,CAACI,GAAG,CAAC,MAAM,CAAC,CAAE,CAAC;AACrD,CAAC;AAEDF,IAAI,CAAC,CAAC","ignoreList":[]}},"mtime":1714088486202},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\n// routes - rutas\n// import LanguageRoutes from \"./routes/language.routes\"\nvar LanguageRoutes = require('./routes/language.routes');\nvar express = require('express');\nvar morgan = require('morgan');\n// import express from \"express\";\n// import morgan from \"morgan\";\nvar app = express(); //ejecu express\nvar cors = require('cors');\n// settings\napp.set(\"port\", 3000);\n// middleware\napp.use(morgan(\"dev\"));\napp.use(cors({\n  origin: ['http://localhost:3000']\n}));\napp.use(express.json());\n\n// routes\n// app.use(\"/listado\", LanguageRoutes)\napp.use(\"/\", LanguageRoutes);\n// app.use(\"/api/usuarios\")\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMYW5ndWFnZVJvdXRlcyIsInJlcXVpcmUiLCJleHByZXNzIiwibW9yZ2FuIiwiYXBwIiwiY29ycyIsInNldCIsInVzZSIsIm9yaWdpbiIsImpzb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBsYXphdmVzcHVjaW9cXERvY3VtZW50c1xcR2l0SHViXFxBU1lTNTEzMS1GZXJyZXRlcmlhXFxBUEkgKyBCQkREXFxBUEkgRmVycmV0ZXJpYVxcc3JjXFwiLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByb3V0ZXMgLSBydXRhc1xyXG4vLyBpbXBvcnQgTGFuZ3VhZ2VSb3V0ZXMgZnJvbSBcIi4vcm91dGVzL2xhbmd1YWdlLnJvdXRlc1wiXHJcbmNvbnN0IExhbmd1YWdlUm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvbGFuZ3VhZ2Uucm91dGVzJyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcclxuY29uc3QgbW9yZ2FuID0gcmVxdWlyZSAoJ21vcmdhbicpXHJcbi8vIGltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbi8vIGltcG9ydCBtb3JnYW4gZnJvbSBcIm1vcmdhblwiO1xyXG5jb25zdCBhcHA9ZXhwcmVzcygpOyAvL2VqZWN1IGV4cHJlc3NcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKVxyXG4vLyBzZXR0aW5nc1xyXG5hcHAuc2V0KFwicG9ydFwiLCAzMDAwKTtcclxuLy8gbWlkZGxld2FyZVxyXG5hcHAudXNlKG1vcmdhbihcImRldlwiKSk7XHJcbmFwcC51c2UoY29ycyhcclxuICAgIHtvcmlnaW46IFsnaHR0cDovL2xvY2FsaG9zdDozMDAwJyxdfVxyXG4pKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcblxyXG4vLyByb3V0ZXNcclxuLy8gYXBwLnVzZShcIi9saXN0YWRvXCIsIExhbmd1YWdlUm91dGVzKVxyXG5hcHAudXNlKFwiL1wiLExhbmd1YWdlUm91dGVzKVxyXG4vLyBhcHAudXNlKFwiL2FwaS91c3Vhcmlvc1wiKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHA7Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQSxJQUFNQSxjQUFjLEdBQUdDLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQztBQUMxRCxJQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsSUFBTUUsTUFBTSxHQUFHRixPQUFPLENBQUUsUUFBUSxDQUFDO0FBQ2pDO0FBQ0E7QUFDQSxJQUFNRyxHQUFHLEdBQUNGLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyQixJQUFNRyxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUI7QUFDQUcsR0FBRyxDQUFDRSxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQztBQUNyQjtBQUNBRixHQUFHLENBQUNHLEdBQUcsQ0FBQ0osTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3RCQyxHQUFHLENBQUNHLEdBQUcsQ0FBQ0YsSUFBSSxDQUNSO0VBQUNHLE1BQU0sRUFBRSxDQUFDLHVCQUF1QjtBQUFFLENBQ3ZDLENBQUMsQ0FBQztBQUNGSixHQUFHLENBQUNHLEdBQUcsQ0FBQ0wsT0FBTyxDQUFDTyxJQUFJLENBQUMsQ0FBQyxDQUFDOztBQUV2QjtBQUNBO0FBQ0FMLEdBQUcsQ0FBQ0csR0FBRyxDQUFDLEdBQUcsRUFBQ1AsY0FBYyxDQUFDO0FBQzNCOztBQUVBVSxNQUFNLENBQUNDLE9BQU8sR0FBR1AsR0FBRyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["LanguageRoutes","require","express","morgan","app","cors","set","use","origin","json","module","exports"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\","sources":["app.js"],"sourcesContent":["// routes - rutas\r\n// import LanguageRoutes from \"./routes/language.routes\"\r\nconst LanguageRoutes = require('./routes/language.routes');\r\nconst express = require('express')\r\nconst morgan = require ('morgan')\r\n// import express from \"express\";\r\n// import morgan from \"morgan\";\r\nconst app=express(); //ejecu express\r\nconst cors = require('cors')\r\n// settings\r\napp.set(\"port\", 3000);\r\n// middleware\r\napp.use(morgan(\"dev\"));\r\napp.use(cors(\r\n    {origin: ['http://localhost:3000',]}\r\n));\r\napp.use(express.json());\r\n\r\n// routes\r\n// app.use(\"/listado\", LanguageRoutes)\r\napp.use(\"/\",LanguageRoutes)\r\n// app.use(\"/api/usuarios\")\r\n\r\nmodule.exports = app;"],"mappings":";;AAAA;AACA;AACA,IAAMA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC1D,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,IAAME,MAAM,GAAGF,OAAO,CAAE,QAAQ,CAAC;AACjC;AACA;AACA,IAAMG,GAAG,GAACF,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,IAAMG,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B;AACAG,GAAG,CAACE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AACrB;AACAF,GAAG,CAACG,GAAG,CAACJ,MAAM,CAAC,KAAK,CAAC,CAAC;AACtBC,GAAG,CAACG,GAAG,CAACF,IAAI,CACR;EAACG,MAAM,EAAE,CAAC,uBAAuB;AAAE,CACvC,CAAC,CAAC;AACFJ,GAAG,CAACG,GAAG,CAACL,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA;AACAL,GAAG,CAACG,GAAG,CAAC,GAAG,EAACP,cAAc,CAAC;AAC3B;;AAEAU,MAAM,CAACC,OAAO,GAAGP,GAAG","ignoreList":[]}},"mtime":1714088486197},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\routes\\\\language.routes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _express = require(\"express\");\nvar _recetas = require(\"../controllers/recetas.controller\");\nvar _user = require(\"../controllers/user.controller\");\n// ruta del proyecto\nvar router = (0, _express.Router)();\n// url principales | http://localhost:3000/\n// router.get(\"/\", recetasController.getRecetas);\nrouter.get(\"/\", function (req, res) {\n  _recetas.methods.getRecetas(req, res);\n});\n// router.get(\"/usuario\", userController.getUser);\nrouter.get(\"/usuario\", function (req, res) {\n  _user.usermethods.getUser(req, res);\n});\n\n// ========= RECETAS =========\n\n// METODOS GET\nrouter.get(\"/receta/:id\", _recetas.methods.getReceta); // http://localhost:3000/receta/numero\nrouter.get(\"/receta-aleatoria\", _recetas.methods.recetaRandom); // http://localhost:3000/receta-aleatoria\nrouter.get(\"/recetas-chile\", _recetas.methods.getRecetaCL); // http://localhost:3000/recetas-chile\nrouter.get(\"/recetas-usa\", _recetas.methods.getRecetaUSA); // http://localhost:3000/recetas-usa\nrouter.get(\"/recetas-gb\", _recetas.methods.getRecetaGB); // http://localhost:3000/recetas-gb\nrouter.get(\"/recetas-canada\", _recetas.methods.getRecetaCA); // http://localhost:3000/recetas-canada\nrouter.get(\"/recetas-es\", _recetas.methods.getRecetaES); // http://localhost:3000/recetas-es\nrouter.get(\"/recetas-mexico\", _recetas.methods.getRecetaMX); // http://localhost:3000/recetas-mexico\nrouter.get(\"/recetas-argentina\", _recetas.methods.getReceta_ARG); // http://localhost:3000/recetas-argentina\nrouter.get(\"/paises\", _recetas.methods.getPaises); // http://localhost:3000/paises\nrouter.get(\"/categorias\", _recetas.methods.getCategorias); // http://localhost:3000/categorias\nrouter.get(\"/categorias-postres\", _recetas.methods.getPostres); // http://localhost:3000/categorias-postres\nrouter.get(\"/categorias-desayuno\", _recetas.methods.getDesayuno); // http://localhost:3000/categorias-desayuno\n// METODOS POST\n// Ruta PUT para agregar una receta\nrouter.put('/add-receta', function (req, res) {\n  res.status(200).send('Receta agregada exitosamente'); // http://localhost:3000/add-receta\n});\n// METODOS PUT\nrouter.put(\"/edit-receta/:id\", _recetas.methods.updateReceta); // http://localhost:3000/edit-receta/numero\n// METODOS DELETE\nrouter[\"delete\"](\"/delete-receta/:id\", _recetas.methods.deleteReceta); // http://localhost:3000/delete-receta/numero\n\n// ========= USUARIOS =========\n\n// METODO GET\nrouter.get(\"/\", _user.usermethods.getUser); // http://localhost:3000/usuario\nrouter.get(\"/usuarioejemplo\", _user.usermethods.ejemploUserPaginado); // http://localhost:3000/usuarioejemplo?page=1\n// METODO POST\nrouter.post(\"/usuario\"); // http://localhost:3000/usuario\n// METODO PUT\nrouter.put(\"/usuario\"); // http://localhost:3000/usuario\n// METODO DELETE\nrouter[\"delete\"](\"/usuario\"); // http://localhost:3000/usuario\nvar _default = exports[\"default\"] = router;\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfcmVjZXRhcyIsIl91c2VyIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwicmVjZXRhc0NvbnRyb2xsZXIiLCJnZXRSZWNldGFzIiwidXNlckNvbnRyb2xsZXIiLCJnZXRVc2VyIiwiZ2V0UmVjZXRhIiwicmVjZXRhUmFuZG9tIiwiZ2V0UmVjZXRhQ0wiLCJnZXRSZWNldGFVU0EiLCJnZXRSZWNldGFHQiIsImdldFJlY2V0YUNBIiwiZ2V0UmVjZXRhRVMiLCJnZXRSZWNldGFNWCIsImdldFJlY2V0YV9BUkciLCJnZXRQYWlzZXMiLCJnZXRDYXRlZ29yaWFzIiwiZ2V0UG9zdHJlcyIsImdldERlc2F5dW5vIiwicHV0Iiwic3RhdHVzIiwic2VuZCIsInVwZGF0ZVJlY2V0YSIsImRlbGV0ZVJlY2V0YSIsImVqZW1wbG9Vc2VyUGFnaW5hZG8iLCJwb3N0IiwiX2RlZmF1bHQiLCJleHBvcnRzIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBsYXphdmVzcHVjaW9cXERvY3VtZW50c1xcR2l0SHViXFxBU1lTNTEzMS1GZXJyZXRlcmlhXFxBUEkgKyBCQkREXFxBUEkgRmVycmV0ZXJpYVxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXMiOlsibGFuZ3VhZ2Uucm91dGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7IG1ldGhvZHMgYXMgcmVjZXRhc0NvbnRyb2xsZXIgfSBmcm9tIFwiLi4vY29udHJvbGxlcnMvcmVjZXRhcy5jb250cm9sbGVyXCI7XHJcbmltcG9ydCB7IHVzZXJtZXRob2RzIGFzIHVzZXJDb250cm9sbGVyIH0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlclwiO1xyXG4vLyBydXRhIGRlbCBwcm95ZWN0b1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuLy8gdXJsIHByaW5jaXBhbGVzIHwgaHR0cDovL2xvY2FsaG9zdDozMDAwL1xyXG4vLyByb3V0ZXIuZ2V0KFwiL1wiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFzKTtcclxucm91dGVyLmdldChcIi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFzKHJlcSwgcmVzKTtcclxufSk7XHJcbi8vIHJvdXRlci5nZXQoXCIvdXN1YXJpb1wiLCB1c2VyQ29udHJvbGxlci5nZXRVc2VyKTtcclxucm91dGVyLmdldChcIi91c3VhcmlvXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgdXNlckNvbnRyb2xsZXIuZ2V0VXNlcihyZXEsIHJlcyk7XHJcbn0pO1xyXG5cclxuLy8gPT09PT09PT09IFJFQ0VUQVMgPT09PT09PT09XHJcblxyXG4vLyBNRVRPRE9TIEdFVFxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YS86aWRcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YS9udW1lcm9cclxucm91dGVyLmdldChcIi9yZWNldGEtYWxlYXRvcmlhXCIsIHJlY2V0YXNDb250cm9sbGVyLnJlY2V0YVJhbmRvbSk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGEtYWxlYXRvcmlhXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1jaGlsZVwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFDTCkgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YXMtY2hpbGVcclxucm91dGVyLmdldChcIi9yZWNldGFzLXVzYVwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFVU0EpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLXVzYVxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtZ2JcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhR0IpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLWdiXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1jYW5hZGFcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhQ0EpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLWNhbmFkYVxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtZXNcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhRVMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLWVzXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1tZXhpY29cIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhTVgpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLW1leGljb1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtYXJnZW50aW5hXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YV9BUkcpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLWFyZ2VudGluYVxyXG5yb3V0ZXIuZ2V0KFwiL3BhaXNlc1wiLCByZWNldGFzQ29udHJvbGxlci5nZXRQYWlzZXMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wYWlzZXNcclxucm91dGVyLmdldChcIi9jYXRlZ29yaWFzXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldENhdGVnb3JpYXMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jYXRlZ29yaWFzXHJcbnJvdXRlci5nZXQoXCIvY2F0ZWdvcmlhcy1wb3N0cmVzXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFBvc3RyZXMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jYXRlZ29yaWFzLXBvc3RyZXNcclxucm91dGVyLmdldChcIi9jYXRlZ29yaWFzLWRlc2F5dW5vXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldERlc2F5dW5vKSAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvY2F0ZWdvcmlhcy1kZXNheXVub1xyXG4vLyBNRVRPRE9TIFBPU1RcclxuLy8gUnV0YSBQVVQgcGFyYSBhZ3JlZ2FyIHVuYSByZWNldGFcclxucm91dGVyLnB1dCgnL2FkZC1yZWNldGEnLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdSZWNldGEgYWdyZWdhZGEgZXhpdG9zYW1lbnRlJyk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hZGQtcmVjZXRhXHJcbn0pOyBcclxuLy8gTUVUT0RPUyBQVVRcclxucm91dGVyLnB1dChcIi9lZGl0LXJlY2V0YS86aWRcIiwgcmVjZXRhc0NvbnRyb2xsZXIudXBkYXRlUmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL2VkaXQtcmVjZXRhL251bWVyb1xyXG4vLyBNRVRPRE9TIERFTEVURVxyXG5yb3V0ZXIuZGVsZXRlKFwiL2RlbGV0ZS1yZWNldGEvOmlkXCIsIHJlY2V0YXNDb250cm9sbGVyLmRlbGV0ZVJlY2V0YSk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9kZWxldGUtcmVjZXRhL251bWVyb1xyXG5cclxuXHJcbi8vID09PT09PT09PSBVU1VBUklPUyA9PT09PT09PT1cclxuXHJcbi8vIE1FVE9ETyBHRVRcclxucm91dGVyLmdldChcIi9cIiwgdXNlckNvbnRyb2xsZXIuZ2V0VXNlcik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c3VhcmlvXHJcbnJvdXRlci5nZXQoXCIvdXN1YXJpb2VqZW1wbG9cIiwgdXNlckNvbnRyb2xsZXIuZWplbXBsb1VzZXJQYWdpbmFkbyk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c3VhcmlvZWplbXBsbz9wYWdlPTFcclxuLy8gTUVUT0RPIFBPU1Rcclxucm91dGVyLnBvc3QoXCIvdXN1YXJpb1wiKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3VzdWFyaW9cclxuLy8gTUVUT0RPIFBVVFxyXG5yb3V0ZXIucHV0KFwiL3VzdWFyaW9cIik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c3VhcmlvXHJcbi8vIE1FVE9ETyBERUxFVEVcclxucm91dGVyLmRlbGV0ZShcIi91c3VhcmlvXCIpOyAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvdXN1YXJpb1xyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsUUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsS0FBQSxHQUFBRixPQUFBO0FBQ0E7QUFDQSxJQUFNRyxNQUFNLEdBQUcsSUFBQUMsZUFBTSxFQUFDLENBQUM7QUFDdkI7QUFDQTtBQUNBRCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsVUFBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUs7RUFDMUJDLGdCQUFpQixDQUFDQyxVQUFVLENBQUNILEdBQUcsRUFBRUMsR0FBRyxDQUFDO0FBQzFDLENBQUMsQ0FBQztBQUNGO0FBQ0FKLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFVBQVUsRUFBRSxVQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBSztFQUNqQ0csaUJBQWMsQ0FBQ0MsT0FBTyxDQUFDTCxHQUFHLEVBQUVDLEdBQUcsQ0FBQztBQUNwQyxDQUFDLENBQUM7O0FBRUY7O0FBRUE7QUFDQUosTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFRyxnQkFBaUIsQ0FBQ0ksU0FBUyxDQUFDLENBQUMsQ0FBQztBQUN4RFQsTUFBTSxDQUFDRSxHQUFHLENBQUMsbUJBQW1CLEVBQUVHLGdCQUFpQixDQUFDSyxZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2pFVixNQUFNLENBQUNFLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRUcsZ0JBQWlCLENBQUNNLFdBQVcsQ0FBQyxFQUFDO0FBQzVEWCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxjQUFjLEVBQUVHLGdCQUFpQixDQUFDTyxZQUFZLENBQUMsRUFBQztBQUMzRFosTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFRyxnQkFBaUIsQ0FBQ1EsV0FBVyxDQUFDLEVBQUM7QUFDekRiLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGlCQUFpQixFQUFFRyxnQkFBaUIsQ0FBQ1MsV0FBVyxDQUFDLEVBQUM7QUFDN0RkLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGFBQWEsRUFBRUcsZ0JBQWlCLENBQUNVLFdBQVcsQ0FBQyxFQUFDO0FBQ3pEZixNQUFNLENBQUNFLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRUcsZ0JBQWlCLENBQUNXLFdBQVcsQ0FBQyxFQUFDO0FBQzdEaEIsTUFBTSxDQUFDRSxHQUFHLENBQUMsb0JBQW9CLEVBQUVHLGdCQUFpQixDQUFDWSxhQUFhLENBQUMsRUFBQztBQUNsRWpCLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFNBQVMsRUFBRUcsZ0JBQWlCLENBQUNhLFNBQVMsQ0FBQyxFQUFDO0FBQ25EbEIsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFRyxnQkFBaUIsQ0FBQ2MsYUFBYSxDQUFDLEVBQUM7QUFDM0RuQixNQUFNLENBQUNFLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRUcsZ0JBQWlCLENBQUNlLFVBQVUsQ0FBQyxFQUFDO0FBQ2hFcEIsTUFBTSxDQUFDRSxHQUFHLENBQUMsc0JBQXNCLEVBQUVHLGdCQUFpQixDQUFDZ0IsV0FBVyxDQUFDLEVBQUM7QUFDbEU7QUFDQTtBQUNBckIsTUFBTSxDQUFDc0IsR0FBRyxDQUFDLGFBQWEsRUFBRSxVQUFDbkIsR0FBRyxFQUFFQyxHQUFHLEVBQUs7RUFDcENBLEdBQUcsQ0FBQ21CLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLDhCQUE4QixDQUFDLENBQUMsQ0FBQztBQUMxRCxDQUFDLENBQUM7QUFDRjtBQUNBeEIsTUFBTSxDQUFDc0IsR0FBRyxDQUFDLGtCQUFrQixFQUFFakIsZ0JBQWlCLENBQUNvQixZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2hFO0FBQ0F6QixNQUFNLFVBQU8sQ0FBQyxvQkFBb0IsRUFBRUssZ0JBQWlCLENBQUNxQixZQUFZLENBQUMsQ0FBQyxDQUFDOztBQUdyRTs7QUFFQTtBQUNBMUIsTUFBTSxDQUFDRSxHQUFHLENBQUMsR0FBRyxFQUFFSyxpQkFBYyxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ3pDUixNQUFNLENBQUNFLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRUssaUJBQWMsQ0FBQ29CLG1CQUFtQixDQUFDLENBQUMsQ0FBQztBQUNuRTtBQUNBM0IsTUFBTSxDQUFDNEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDekI7QUFDQTVCLE1BQU0sQ0FBQ3NCLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQ3hCO0FBQ0F0QixNQUFNLFVBQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQUEsSUFBQTZCLFFBQUEsR0FBQUMsT0FBQSxjQUlaOUIsTUFBTTtBQUVyQitCLE1BQU0sQ0FBQ0QsT0FBTyxHQUFHOUIsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_express","require","_recetas","_user","router","Router","get","req","res","recetasController","getRecetas","userController","getUser","getReceta","recetaRandom","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPaises","getCategorias","getPostres","getDesayuno","put","status","send","updateReceta","deleteReceta","ejemploUserPaginado","post","_default","exports","module"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\routes\\","sources":["language.routes.js"],"sourcesContent":["import { Router } from \"express\";\r\nimport { methods as recetasController } from \"../controllers/recetas.controller\";\r\nimport { usermethods as userController } from \"../controllers/user.controller\";\r\n// ruta del proyecto\r\nconst router = Router();\r\n// url principales | http://localhost:3000/\r\n// router.get(\"/\", recetasController.getRecetas);\r\nrouter.get(\"/\", (req, res) => {\r\n    recetasController.getRecetas(req, res);\r\n});\r\n// router.get(\"/usuario\", userController.getUser);\r\nrouter.get(\"/usuario\", (req, res) => {\r\n    userController.getUser(req, res);\r\n});\r\n\r\n// ========= RECETAS =========\r\n\r\n// METODOS GET\r\nrouter.get(\"/receta/:id\", recetasController.getReceta); // http://localhost:3000/receta/numero\r\nrouter.get(\"/receta-aleatoria\", recetasController.recetaRandom); // http://localhost:3000/receta-aleatoria\r\nrouter.get(\"/recetas-chile\", recetasController.getRecetaCL) // http://localhost:3000/recetas-chile\r\nrouter.get(\"/recetas-usa\", recetasController.getRecetaUSA) // http://localhost:3000/recetas-usa\r\nrouter.get(\"/recetas-gb\", recetasController.getRecetaGB) // http://localhost:3000/recetas-gb\r\nrouter.get(\"/recetas-canada\", recetasController.getRecetaCA) // http://localhost:3000/recetas-canada\r\nrouter.get(\"/recetas-es\", recetasController.getRecetaES) // http://localhost:3000/recetas-es\r\nrouter.get(\"/recetas-mexico\", recetasController.getRecetaMX) // http://localhost:3000/recetas-mexico\r\nrouter.get(\"/recetas-argentina\", recetasController.getReceta_ARG) // http://localhost:3000/recetas-argentina\r\nrouter.get(\"/paises\", recetasController.getPaises) // http://localhost:3000/paises\r\nrouter.get(\"/categorias\", recetasController.getCategorias) // http://localhost:3000/categorias\r\nrouter.get(\"/categorias-postres\", recetasController.getPostres) // http://localhost:3000/categorias-postres\r\nrouter.get(\"/categorias-desayuno\", recetasController.getDesayuno) // http://localhost:3000/categorias-desayuno\r\n// METODOS POST\r\n// Ruta PUT para agregar una receta\r\nrouter.put('/add-receta', (req, res) => {\r\n    res.status(200).send('Receta agregada exitosamente'); // http://localhost:3000/add-receta\r\n}); \r\n// METODOS PUT\r\nrouter.put(\"/edit-receta/:id\", recetasController.updateReceta); // http://localhost:3000/edit-receta/numero\r\n// METODOS DELETE\r\nrouter.delete(\"/delete-receta/:id\", recetasController.deleteReceta); // http://localhost:3000/delete-receta/numero\r\n\r\n\r\n// ========= USUARIOS =========\r\n\r\n// METODO GET\r\nrouter.get(\"/\", userController.getUser); // http://localhost:3000/usuario\r\nrouter.get(\"/usuarioejemplo\", userController.ejemploUserPaginado); // http://localhost:3000/usuarioejemplo?page=1\r\n// METODO POST\r\nrouter.post(\"/usuario\"); // http://localhost:3000/usuario\r\n// METODO PUT\r\nrouter.put(\"/usuario\"); // http://localhost:3000/usuario\r\n// METODO DELETE\r\nrouter.delete(\"/usuario\"); // http://localhost:3000/usuario\r\n\r\n\r\n\r\nexport default router;\r\n\r\nmodule.exports = router"],"mappings":"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","ignoreList":[]}},"mtime":1714088955010},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\controllers\\\\recetas.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.methods = void 0;\nvar _database = require(\"./../database/database\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n// PARA OBTENER LOS RESULTADOS\nvar getRecetas = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    var connection, _yield$connection$que, _yield$connection$que2, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return (0, _database.getConnection)();\n        case 3:\n          connection = _context.sent;\n          _context.next = 6;\n          return connection.query(\"SELECT  \\n        test.id_receta, \\n        test.nombre_receta, \\n        test.ingrediente_receta, \\n        test.anio, \\n        test.pais_receta, \\n        test.preparacion_receta, \\n        test.fecha_creacion, \\n        test.url_imagen_receta, \\n        test.categoria,\\n        usuarios.nombres as \\\"creado_por\\\" \\n        FROM test\\n        INNER JOIN usuarios ON test.id_user = usuarios.id_user;\");\n        case 6:\n          _yield$connection$que = _context.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          result = _yield$connection$que2[0];\n          if (!(result.length === 0)) {\n            _context.next = 12;\n            break;\n          }\n          console.log(\"No hay más resultados disponibles.\");\n          return _context.abrupt(\"return\", res.status(404).json({\n            message: \"No hay más resultados disponibles.\"\n          }));\n        case 12:\n          // console.log(result);\n          res.json(result);\n          _context.next = 19;\n          break;\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          res.status(500);\n          res.send(_context.t0.message);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 15]]);\n  }));\n  return function getRecetas(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// PARA OBTENER LOS RESULTADOS\nvar getPaises = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    var connection, _yield$connection$que3, _yield$connection$que4, result;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return (0, _database.getConnection)();\n        case 3:\n          connection = _context2.sent;\n          _context2.next = 6;\n          return connection.query(\"SELECT DISTINCT pais_receta FROM test;\");\n        case 6:\n          _yield$connection$que3 = _context2.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          result = _yield$connection$que4[0];\n          if (!(result.length === 0)) {\n            _context2.next = 12;\n            break;\n          }\n          console.log(\"No hay más resultados disponibles.\");\n          return _context2.abrupt(\"return\", res.status(404).json({\n            message: \"No hay más resultados disponibles.\"\n          }));\n        case 12:\n          // console.log(result);\n          res.json(result);\n          _context2.next = 19;\n          break;\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](0);\n          res.status(500);\n          res.send(_context2.t0.message);\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 15]]);\n  }));\n  return function getPaises(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// PARA OBTENER LOS RESULTADOS\nvar recetaRandom = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    var connection, _yield$connection$que5, _yield$connection$que6, result;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return (0, _database.getConnection)();\n        case 3:\n          connection = _context3.sent;\n          _context3.next = 6;\n          return connection.query(\"SELECT  \\n        test.id_receta, \\n        test.nombre_receta, \\n        test.ingrediente_receta, \\n        test.anio, \\n        test.pais_receta, \\n        test.preparacion_receta, \\n        test.fecha_creacion, \\n        test.url_imagen_receta, \\n        test.categoria,\\n        usuarios.nombres as \\\"creado_por\\\" \\n        FROM test\\n        INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n        ORDER BY RAND()\\n        LIMIT 1;\");\n        case 6:\n          _yield$connection$que5 = _context3.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          result = _yield$connection$que6[0];\n          if (!(result.length === 0)) {\n            _context3.next = 12;\n            break;\n          }\n          console.log(\"No hay más resultados disponibles.\");\n          return _context3.abrupt(\"return\", res.status(404).json({\n            message: \"No hay más resultados disponibles.\"\n          }));\n        case 12:\n          // console.log(result);\n          res.json(result);\n          _context3.next = 19;\n          break;\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](0);\n          res.status(500);\n          res.send(_context3.t0.message);\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 15]]);\n  }));\n  return function recetaRandom(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n// PARA OBTENER LOS RESULTADOS\nvar getCategorias = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var connection, _yield$connection$que7, _yield$connection$que8, result;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return (0, _database.getConnection)();\n        case 3:\n          connection = _context4.sent;\n          _context4.next = 6;\n          return connection.query(\"SELECT DISTINCT categoria FROM test;\");\n        case 6:\n          _yield$connection$que7 = _context4.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          result = _yield$connection$que8[0];\n          if (!(result.length === 0)) {\n            _context4.next = 12;\n            break;\n          }\n          console.log(\"No hay más resultados disponibles.\");\n          return _context4.abrupt(\"return\", res.status(404).json({\n            message: \"No hay más resultados disponibles.\"\n          }));\n        case 12:\n          console.log(result);\n          res.json(result);\n          _context4.next = 20;\n          break;\n        case 16:\n          _context4.prev = 16;\n          _context4.t0 = _context4[\"catch\"](0);\n          res.status(500);\n          res.send(_context4.t0.message);\n        case 20:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 16]]);\n  }));\n  return function getCategorias(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\n// PARA OBTENERLOS POR id\nvar getReceta = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    var id, connection, _yield$connection$que9, _yield$connection$que10, result;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context5.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context5.sent;\n          _context5.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.categoria,\\n            test.url_imagen_receta, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.id_receta=?\", id);\n        case 7:\n          _yield$connection$que9 = _context5.sent;\n          _yield$connection$que10 = _slicedToArray(_yield$connection$que9, 1);\n          result = _yield$connection$que10[0];\n          if (!(result.length === 0)) {\n            _context5.next = 12;\n            break;\n          }\n          return _context5.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context5.next = 19;\n          break;\n        case 15:\n          _context5.prev = 15;\n          _context5.t0 = _context5[\"catch\"](0);\n          res.status(500);\n          res.send(_context5.t0.message);\n        case 19:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 15]]);\n  }));\n  return function getReceta(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\n// PARA AÑADIR ELEMENTOS\nvar addReceta = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n    var _req$body, nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user, receta, connection;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _req$body = req.body, nombre_receta = _req$body.nombre_receta, ingrediente_receta = _req$body.ingrediente_receta, pais_receta = _req$body.pais_receta, preparacion_receta = _req$body.preparacion_receta, categoria = _req$body.categoria, id_user = _req$body.id_user; // if (nombre_receta == undefined || ingrediente_receta == undefined) {\n          //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\n          // }\n          receta = {\n            nombre_receta: nombre_receta,\n            ingrediente_receta: ingrediente_receta,\n            pais_receta: pais_receta,\n            preparacion_receta: preparacion_receta,\n            categoria: categoria,\n            id_user: id_user\n          };\n          _context6.next = 5;\n          return (0, _database.getConnection)();\n        case 5:\n          connection = _context6.sent;\n          _context6.next = 8;\n          return connection.query(\"INSERT INTO test SET ?\", receta);\n        case 8:\n          res.json({\n            message: \"Receta añadida exitosamente\"\n          });\n          _context6.next = 15;\n          break;\n        case 11:\n          _context6.prev = 11;\n          _context6.t0 = _context6[\"catch\"](0);\n          res.status(500);\n          res.send(_context6.t0.message);\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[0, 11]]);\n  }));\n  return function addReceta(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n// PARA ELIMINAR ELEMENTOS\nvar deleteReceta = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n    var id, connection, _yield$connection$que11, _yield$connection$que12, result;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          id = req.params.id;\n          _context7.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context7.sent;\n          _context7.next = 7;\n          return connection.query(\"DELETE FROM test WHERE id_receta = ?;\", id);\n        case 7:\n          _yield$connection$que11 = _context7.sent;\n          _yield$connection$que12 = _slicedToArray(_yield$connection$que11, 1);\n          result = _yield$connection$que12[0];\n          if (result.affectedRows > 0) {\n            // Elemento borrado exitosamente\n            res.json({\n              message: \"Elemento con ID \".concat(id, \" borrado exitosamente.\")\n            });\n          } else {\n            // No se encontró ningún elemento con el ID proporcionado\n            res.status(404).json({\n              message: \"No se encontr\\xF3 ning\\xFAn elemento con el ID \".concat(id, \".\")\n            });\n          }\n          _context7.next = 16;\n          break;\n        case 13:\n          _context7.prev = 13;\n          _context7.t0 = _context7[\"catch\"](0);\n          // Error en la solicitud\n          res.status(500).send(_context7.t0.message);\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[0, 13]]);\n  }));\n  return function deleteReceta(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\n// PARA ACTUALIZAR ELEMENTOS\nvar updateReceta = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n    var id, _req$body2, nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user, receta, connection, _yield$connection$que13, _yield$connection$que14, result;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          id = req.params.id;\n          _req$body2 = req.body, nombre_receta = _req$body2.nombre_receta, ingrediente_receta = _req$body2.ingrediente_receta, pais_receta = _req$body2.pais_receta, categoria = _req$body2.categoria, preparacion_receta = _req$body2.preparacion_receta, id_user = _req$body2.id_user;\n          if (!(nombre_receta == undefined || ingrediente_receta == undefined)) {\n            _context8.next = 5;\n            break;\n          }\n          return _context8.abrupt(\"return\", res.status(400).json({\n            message: \"Bad Request, Por favor, completar los datos.\"\n          }));\n        case 5:\n          receta = {\n            nombre_receta: nombre_receta,\n            ingrediente_receta: ingrediente_receta,\n            pais_receta: pais_receta,\n            categoria: categoria,\n            preparacion_receta: preparacion_receta,\n            id_user: id_user\n          };\n          _context8.next = 8;\n          return (0, _database.getConnection)();\n        case 8:\n          connection = _context8.sent;\n          _context8.next = 11;\n          return connection.query(\"UPDATE test SET ? WHERE id_receta = ?;\", [receta, id]);\n        case 11:\n          _yield$connection$que13 = _context8.sent;\n          _yield$connection$que14 = _slicedToArray(_yield$connection$que13, 1);\n          result = _yield$connection$que14[0];\n          // console.log(result);\n          res.json(result);\n          _context8.next = 21;\n          break;\n        case 17:\n          _context8.prev = 17;\n          _context8.t0 = _context8[\"catch\"](0);\n          res.status(500);\n          res.send(_context8.t0.message);\n        case 21:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[0, 17]]);\n  }));\n  return function updateReceta(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\n// ============================DESGLOSE POR PAISES ========================================\n// LISTADO:\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\n\n// PARA OBTENERLOS POR pais = chile\nvar getRecetaCL = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {\n    var id, connection, _yield$connection$que15, _yield$connection$que16, result;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context9.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context9.sent;\n          _context9.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.pais_receta='chile';\");\n        case 7:\n          _yield$connection$que15 = _context9.sent;\n          _yield$connection$que16 = _slicedToArray(_yield$connection$que15, 1);\n          result = _yield$connection$que16[0];\n          if (!(result.length === 0)) {\n            _context9.next = 12;\n            break;\n          }\n          return _context9.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context9.next = 19;\n          break;\n        case 15:\n          _context9.prev = 15;\n          _context9.t0 = _context9[\"catch\"](0);\n          res.status(500);\n          res.send(_context9.t0.message);\n        case 19:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[0, 15]]);\n  }));\n  return function getRecetaCL(_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\n// PARA OBTENERLOS POR pais = Estados Unidos\nvar getRecetaUSA = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {\n    var id, connection, _yield$connection$que17, _yield$connection$que18, result;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context10.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context10.sent;\n          _context10.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.pais_receta = 'Estados Unidos';\");\n        case 7:\n          _yield$connection$que17 = _context10.sent;\n          _yield$connection$que18 = _slicedToArray(_yield$connection$que17, 1);\n          result = _yield$connection$que18[0];\n          if (!(result.length === 0)) {\n            _context10.next = 12;\n            break;\n          }\n          return _context10.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context10.next = 19;\n          break;\n        case 15:\n          _context10.prev = 15;\n          _context10.t0 = _context10[\"catch\"](0);\n          res.status(500);\n          res.send(_context10.t0.message);\n        case 19:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[0, 15]]);\n  }));\n  return function getRecetaUSA(_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n// PARA OBTENERLOS POR pais = Gran Bretaña\nvar getRecetaGB = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(req, res) {\n    var id, connection, _yield$connection$que19, _yield$connection$que20, result;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context11.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context11.sent;\n          _context11.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.pais_receta='Gran Breta\\xF1a';\");\n        case 7:\n          _yield$connection$que19 = _context11.sent;\n          _yield$connection$que20 = _slicedToArray(_yield$connection$que19, 1);\n          result = _yield$connection$que20[0];\n          if (!(result.length === 0)) {\n            _context11.next = 12;\n            break;\n          }\n          return _context11.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context11.next = 19;\n          break;\n        case 15:\n          _context11.prev = 15;\n          _context11.t0 = _context11[\"catch\"](0);\n          res.status(500);\n          res.send(_context11.t0.message);\n        case 19:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11, null, [[0, 15]]);\n  }));\n  return function getRecetaGB(_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n// PARA OBTENERLOS POR pais = chile\nvar getRecetaCA = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(req, res) {\n    var id, connection, _yield$connection$que21, _yield$connection$que22, result;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context12.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context12.sent;\n          _context12.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.pais_receta='Canada';\");\n        case 7:\n          _yield$connection$que21 = _context12.sent;\n          _yield$connection$que22 = _slicedToArray(_yield$connection$que21, 1);\n          result = _yield$connection$que22[0];\n          if (!(result.length === 0)) {\n            _context12.next = 12;\n            break;\n          }\n          return _context12.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context12.next = 19;\n          break;\n        case 15:\n          _context12.prev = 15;\n          _context12.t0 = _context12[\"catch\"](0);\n          res.status(500);\n          res.send(_context12.t0.message);\n        case 19:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12, null, [[0, 15]]);\n  }));\n  return function getRecetaCA(_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n// PARA OBTENERLOS POR pais = chile\nvar getRecetaES = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(req, res) {\n    var id, connection, _yield$connection$que23, _yield$connection$que24, result;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context13.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context13.sent;\n          _context13.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.pais_receta='espa\\xF1a';\");\n        case 7:\n          _yield$connection$que23 = _context13.sent;\n          _yield$connection$que24 = _slicedToArray(_yield$connection$que23, 1);\n          result = _yield$connection$que24[0];\n          if (!(result.length === 0)) {\n            _context13.next = 12;\n            break;\n          }\n          return _context13.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context13.next = 19;\n          break;\n        case 15:\n          _context13.prev = 15;\n          _context13.t0 = _context13[\"catch\"](0);\n          res.status(500);\n          res.send(_context13.t0.message);\n        case 19:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13, null, [[0, 15]]);\n  }));\n  return function getRecetaES(_x25, _x26) {\n    return _ref13.apply(this, arguments);\n  };\n}();\n// PARA OBTENERLOS POR pais = chile\nvar getRecetaMX = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(req, res) {\n    var id, connection, _yield$connection$que25, _yield$connection$que26, result;\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context14.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context14.sent;\n          _context14.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.pais_receta='Mexico';\");\n        case 7:\n          _yield$connection$que25 = _context14.sent;\n          _yield$connection$que26 = _slicedToArray(_yield$connection$que25, 1);\n          result = _yield$connection$que26[0];\n          if (!(result.length === 0)) {\n            _context14.next = 12;\n            break;\n          }\n          return _context14.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context14.next = 19;\n          break;\n        case 15:\n          _context14.prev = 15;\n          _context14.t0 = _context14[\"catch\"](0);\n          res.status(500);\n          res.send(_context14.t0.message);\n        case 19:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14, null, [[0, 15]]);\n  }));\n  return function getRecetaMX(_x27, _x28) {\n    return _ref14.apply(this, arguments);\n  };\n}();\n// PARA OBTENERLOS POR pais = chile\nvar getReceta_ARG = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(req, res) {\n    var id, connection, _yield$connection$que27, _yield$connection$que28, result;\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context15.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context15.sent;\n          _context15.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.pais_receta='Argentina';\");\n        case 7:\n          _yield$connection$que27 = _context15.sent;\n          _yield$connection$que28 = _slicedToArray(_yield$connection$que27, 1);\n          result = _yield$connection$que28[0];\n          if (!(result.length === 0)) {\n            _context15.next = 12;\n            break;\n          }\n          return _context15.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context15.next = 19;\n          break;\n        case 15:\n          _context15.prev = 15;\n          _context15.t0 = _context15[\"catch\"](0);\n          res.status(500);\n          res.send(_context15.t0.message);\n        case 19:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15, null, [[0, 15]]);\n  }));\n  return function getReceta_ARG(_x29, _x30) {\n    return _ref15.apply(this, arguments);\n  };\n}();\n// =====================================================================\n// GESTION DE CATEGORIAS COMO POSTRES, ETC\n// =====================================================================\n\n// seleccionar postres\nvar getPostres = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(req, res) {\n    var id, connection, _yield$connection$que29, _yield$connection$que30, result;\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context16.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context16.sent;\n          _context16.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            test.categoria, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.categoria='postres';\");\n        case 7:\n          _yield$connection$que29 = _context16.sent;\n          _yield$connection$que30 = _slicedToArray(_yield$connection$que29, 1);\n          result = _yield$connection$que30[0];\n          if (!(result.length === 0)) {\n            _context16.next = 12;\n            break;\n          }\n          return _context16.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context16.next = 19;\n          break;\n        case 15:\n          _context16.prev = 15;\n          _context16.t0 = _context16[\"catch\"](0);\n          res.status(500);\n          res.send(_context16.t0.message);\n        case 19:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16, null, [[0, 15]]);\n  }));\n  return function getPostres(_x31, _x32) {\n    return _ref16.apply(this, arguments);\n  };\n}();\n\n// seleccionar desayunos\nvar getDesayuno = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(req, res) {\n    var id, connection, _yield$connection$que31, _yield$connection$que32, result;\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context17.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context17.sent;\n          _context17.next = 7;\n          return connection.query(\"SELECT  \\n            test.id_receta, \\n            test.nombre_receta, \\n            test.ingrediente_receta, \\n            test.anio, \\n            test.pais_receta, \\n            test.preparacion_receta, \\n            test.fecha_creacion, \\n            test.url_imagen_receta, \\n            test.categoria, \\n            usuarios.nombres as \\\"creado_por\\\" \\n            FROM test\\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\\n            WHERE test.categoria='desayuno';\");\n        case 7:\n          _yield$connection$que31 = _context17.sent;\n          _yield$connection$que32 = _slicedToArray(_yield$connection$que31, 1);\n          result = _yield$connection$que32[0];\n          if (!(result.length === 0)) {\n            _context17.next = 12;\n            break;\n          }\n          return _context17.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context17.next = 19;\n          break;\n        case 15:\n          _context17.prev = 15;\n          _context17.t0 = _context17[\"catch\"](0);\n          res.status(500);\n          res.send(_context17.t0.message);\n        case 19:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17, null, [[0, 15]]);\n  }));\n  return function getDesayuno(_x33, _x34) {\n    return _ref17.apply(this, arguments);\n  };\n}();\nvar methods = exports.methods = {\n  // GET \n  getRecetas: getRecetas,\n  getReceta: getReceta,\n  getRecetaCL: getRecetaCL,\n  getRecetaUSA: getRecetaUSA,\n  getRecetaGB: getRecetaGB,\n  getRecetaCA: getRecetaCA,\n  getRecetaES: getRecetaES,\n  getRecetaMX: getRecetaMX,\n  getReceta_ARG: getReceta_ARG,\n  getPaises: getPaises,\n  recetaRandom: recetaRandom,\n  // CATEGORIAS\n  getCategorias: getCategorias,\n  getPostres: getPostres,\n  getDesayuno: getDesayuno,\n  // POST\n  addReceta: addReceta,\n  // PUT\n  updateReceta: updateReceta,\n  // DELETE\n  deleteReceta: deleteReceta\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","getRecetas","_ref","_callee","req","res","connection","_yield$connection$que","_yield$connection$que2","result","_callee$","_context","getConnection","query","console","log","status","json","message","t0","send","_x","_x2","getPaises","_ref2","_callee2","_yield$connection$que3","_yield$connection$que4","_callee2$","_context2","_x3","_x4","recetaRandom","_ref3","_callee3","_yield$connection$que5","_yield$connection$que6","_callee3$","_context3","_x5","_x6","getCategorias","_ref4","_callee4","_yield$connection$que7","_yield$connection$que8","_callee4$","_context4","_x7","_x8","getReceta","_ref5","_callee5","id","_yield$connection$que9","_yield$connection$que10","_callee5$","_context5","params","_x9","_x10","addReceta","_ref6","_callee6","_req$body","nombre_receta","ingrediente_receta","pais_receta","preparacion_receta","categoria","id_user","receta","_callee6$","_context6","body","_x11","_x12","deleteReceta","_ref7","_callee7","_yield$connection$que11","_yield$connection$que12","_callee7$","_context7","affectedRows","concat","_x13","_x14","updateReceta","_ref8","_callee8","_req$body2","_yield$connection$que13","_yield$connection$que14","_callee8$","_context8","_x15","_x16","getRecetaCL","_ref9","_callee9","_yield$connection$que15","_yield$connection$que16","_callee9$","_context9","_x17","_x18","getRecetaUSA","_ref10","_callee10","_yield$connection$que17","_yield$connection$que18","_callee10$","_context10","_x19","_x20","getRecetaGB","_ref11","_callee11","_yield$connection$que19","_yield$connection$que20","_callee11$","_context11","_x21","_x22","getRecetaCA","_ref12","_callee12","_yield$connection$que21","_yield$connection$que22","_callee12$","_context12","_x23","_x24","getRecetaES","_ref13","_callee13","_yield$connection$que23","_yield$connection$que24","_callee13$","_context13","_x25","_x26","getRecetaMX","_ref14","_callee14","_yield$connection$que25","_yield$connection$que26","_callee14$","_context14","_x27","_x28","getReceta_ARG","_ref15","_callee15","_yield$connection$que27","_yield$connection$que28","_callee15$","_context15","_x29","_x30","getPostres","_ref16","_callee16","_yield$connection$que29","_yield$connection$que30","_callee16$","_context16","_x31","_x32","getDesayuno","_ref17","_callee17","_yield$connection$que31","_yield$connection$que32","_callee17$","_context17","_x33","_x34","methods","exports"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\controllers\\","sources":["recetas.controller.js"],"sourcesContent":["import { Connection, getConnection } from \"./../database/database\"\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getRecetas = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT  \r\n        test.id_receta, \r\n        test.nombre_receta, \r\n        test.ingrediente_receta, \r\n        test.anio, \r\n        test.pais_receta, \r\n        test.preparacion_receta, \r\n        test.fecha_creacion, \r\n        test.url_imagen_receta, \r\n        test.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM test\r\n        INNER JOIN usuarios ON test.id_user = usuarios.id_user;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getPaises = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT DISTINCT pais_receta FROM test;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst recetaRandom = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT  \r\n        test.id_receta, \r\n        test.nombre_receta, \r\n        test.ingrediente_receta, \r\n        test.anio, \r\n        test.pais_receta, \r\n        test.preparacion_receta, \r\n        test.fecha_creacion, \r\n        test.url_imagen_receta, \r\n        test.categoria,\r\n        usuarios.nombres as \"creado_por\" \r\n        FROM test\r\n        INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n        ORDER BY RAND()\r\n        LIMIT 1;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENER LOS RESULTADOS\r\nconst getCategorias = async (req, res) => {\r\n\r\n    try {\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n        `SELECT DISTINCT categoria FROM test;`);\r\n        \r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            console.log(\"No hay más resultados disponibles.\");\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n        console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR id\r\nconst getReceta = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.categoria,\r\n            test.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.id_receta=?`, id);\r\n        // console.log(result);\r\n         // Verificar si hay resultados\r\n         if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n\r\n// PARA AÑADIR ELEMENTOS\r\nconst addReceta = async (req, res) => {\r\n\r\n    try {\r\n        const {nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user} = req.body;\r\n\r\n        // if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n        //     return res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        // }\r\n\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, preparacion_receta, categoria, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO test SET ?\", receta);\r\n        res.json({ message: \"Receta añadida exitosamente\" })\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteReceta = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"DELETE FROM test WHERE id_receta = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Elemento con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún elemento con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR ELEMENTOS\r\nconst updateReceta = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user } = req.body;\r\n        if (nombre_receta == undefined || ingrediente_receta == undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const receta = {\r\n            nombre_receta, ingrediente_receta, pais_receta, categoria, preparacion_receta, id_user\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"UPDATE test SET ? WHERE id_receta = ?;\",[receta,id]);\r\n        \r\n        // console.log(result);\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// ============================DESGLOSE POR PAISES ========================================\r\n// LISTADO:\r\n// Chile || Estados Unidos || Gran Bretaña || Canada || España || Mexico || Argentina\r\n    \r\n\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCL = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.pais_receta='chile';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA OBTENERLOS POR pais = Estados Unidos\r\nconst getRecetaUSA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.pais_receta = 'Estados Unidos';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = Gran Bretaña\r\nconst getRecetaGB = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.pais_receta='Gran Bretaña';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaCA = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.pais_receta='Canada';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaES = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.pais_receta='españa';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getRecetaMX = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.pais_receta='Mexico';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// PARA OBTENERLOS POR pais = chile\r\nconst getReceta_ARG = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.pais_receta='Argentina';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n// =====================================================================\r\n                // GESTION DE CATEGORIAS COMO POSTRES, ETC\r\n// =====================================================================\r\n\r\n// seleccionar postres\r\nconst getPostres = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            test.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.categoria='postres';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// seleccionar desayunos\r\nconst getDesayuno = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\r\n            `SELECT  \r\n            test.id_receta, \r\n            test.nombre_receta, \r\n            test.ingrediente_receta, \r\n            test.anio, \r\n            test.pais_receta, \r\n            test.preparacion_receta, \r\n            test.fecha_creacion, \r\n            test.url_imagen_receta, \r\n            test.categoria, \r\n            usuarios.nombres as \"creado_por\" \r\n            FROM test\r\n            INNER JOIN usuarios ON test.id_user = usuarios.id_user\r\n            WHERE test.categoria='desayuno';`);\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nexport const methods = {\r\n    // GET \r\n    getRecetas, getReceta, getRecetaCL, getRecetaUSA, getRecetaGB, getRecetaCA, getRecetaES, getRecetaMX, getReceta_ARG, getPaises, recetaRandom,\r\n    // CATEGORIAS\r\n     getCategorias, getPostres, getDesayuno,\r\n    // POST\r\n    addReceta,\r\n    // PUT\r\n    updateReceta,\r\n    // DELETE\r\n    deleteReceta,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1714088980064},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\database\\\\database.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n// import mysql from \"promise-mysql\";\n// import { claves } from \"./../config\";\n\n// const connection = mysql.createConnection({\n//     host: claves.host,\n//     database: claves.database,\n//     user: claves.user,\n//     password: claves.password\n// });\n\n// const getConnection = () => {\n//     return connection;\n// }\n\n// module.exports = {\n//     getConnection\n// }\n\nvar _require = require('sequelize'),\n  Sequelize = _require.Sequelize;\nvar _require2 = require('./../config'),\n  claves = _require2.claves;\n// Configuración de Sequelize\nvar sequelize = new Sequelize(claves.database, claves.user, claves.password, {\n  host: claves.host,\n  dialect: 'mysql'\n});\n\n// Definición del modelo de conexión\nvar Connection = sequelize.define('Connection');\n\n// Función para obtener la conexión\nvar getConnection = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return sequelize.authenticate();\n        case 3:\n          console.log('Conexión establecida correctamente.');\n          return _context.abrupt(\"return\", sequelize);\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('No se pudo conectar a la base de datos:', _context.t0);\n          throw _context.t0;\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return function getConnection() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n// Exportar la función de conexión\nmodule.exports = {\n  getConnection: getConnection,\n  Connection: Connection\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_require","require","Sequelize","_require2","claves","sequelize","database","user","password","host","dialect","Connection","getConnection","_ref","_callee","_callee$","_context","authenticate","console","log","t0","module","exports"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\database\\","sources":["database.js"],"sourcesContent":["// import mysql from \"promise-mysql\";\r\n// import { claves } from \"./../config\";\r\n\r\n// const connection = mysql.createConnection({\r\n//     host: claves.host,\r\n//     database: claves.database,\r\n//     user: claves.user,\r\n//     password: claves.password\r\n// });\r\n\r\n// const getConnection = () => {\r\n//     return connection;\r\n// }\r\n\r\n// module.exports = {\r\n//     getConnection\r\n// }\r\n\r\n\r\nconst { Sequelize } = require('sequelize');\r\nconst { claves } = require('./../config');\r\n// Configuración de Sequelize\r\nconst sequelize = new Sequelize(claves.database, claves.user, claves.password, {\r\n  host: claves.host,\r\n  dialect: 'mysql',\r\n});\r\n\r\n// Definición del modelo de conexión\r\nconst Connection = sequelize.define('Connection');\r\n\r\n// Función para obtener la conexión\r\nconst getConnection = async () => {\r\n  try {\r\n    // Autenticar la conexión\r\n    await sequelize.authenticate();\r\n    console.log('Conexión establecida correctamente.');\r\n    return sequelize;\r\n  } catch (error) {\r\n    console.error('No se pudo conectar a la base de datos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Exportar la función de conexión\r\nmodule.exports = {\r\n  getConnection,\r\n  Connection,\r\n};\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1714088486201},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.claves = void 0;\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n_dotenv[\"default\"].config();\nvar claves = exports.claves = {\n  host: process.env.HOST || \"\",\n  database: process.env.DATABASE || \"\",\n  user: process.env.USER || \"\",\n  password: process.env.PASSWORD || \"\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZG90ZW52IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZG90ZW52IiwiY29uZmlnIiwiY2xhdmVzIiwiZXhwb3J0cyIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiSE9TVCIsImRhdGFiYXNlIiwiREFUQUJBU0UiLCJ1c2VyIiwiVVNFUiIsInBhc3N3b3JkIiwiUEFTU1dPUkQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccGxhemF2ZXNwdWNpb1xcRG9jdW1lbnRzXFxHaXRIdWJcXEFTWVM1MTMxLUZlcnJldGVyaWFcXEFQSSArIEJCRERcXEFQSSBGZXJyZXRlcmlhXFxzcmNcXCIsInNvdXJjZXMiOlsiY29uZmlnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3RlbnYgZnJvbSBcImRvdGVudlwiO1xyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5leHBvcnQgY29uc3QgY2xhdmVzID17XHJcbiAgICBob3N0OiBwcm9jZXNzLmVudi5IT1NUIHx8IFwiXCIsXHJcbiAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREFUQUJBU0UgfHwgXCJcIixcclxuICAgIHVzZXI6IHByb2Nlc3MuZW52LlVTRVIgfHwgXCJcIixcclxuICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5QQVNTV09SRCB8fCBcIlwiXHJcbn1cclxuXHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQTRCLFNBQUFELHVCQUFBRSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsZ0JBQUFBLEdBQUE7QUFDNUJFLGtCQUFNLENBQUNDLE1BQU0sQ0FBQyxDQUFDO0FBRVIsSUFBTUMsTUFBTSxHQUFBQyxPQUFBLENBQUFELE1BQUEsR0FBRTtFQUNqQkUsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxJQUFJLEVBQUU7RUFDNUJDLFFBQVEsRUFBRUgsT0FBTyxDQUFDQyxHQUFHLENBQUNHLFFBQVEsSUFBSSxFQUFFO0VBQ3BDQyxJQUFJLEVBQUVMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSyxJQUFJLElBQUksRUFBRTtFQUM1QkMsUUFBUSxFQUFFUCxPQUFPLENBQUNDLEdBQUcsQ0FBQ08sUUFBUSxJQUFJO0FBQ3RDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=","map":{"version":3,"names":["_dotenv","_interopRequireDefault","require","obj","__esModule","dotenv","config","claves","exports","host","process","env","HOST","database","DATABASE","user","USER","password","PASSWORD"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\","sources":["config.js"],"sourcesContent":["import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nexport const claves ={\r\n    host: process.env.HOST || \"\",\r\n    database: process.env.DATABASE || \"\",\r\n    user: process.env.USER || \"\",\r\n    password: process.env.PASSWORD || \"\"\r\n}\r\n\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA4B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAC5BE,kBAAM,CAACC,MAAM,CAAC,CAAC;AAER,IAAMC,MAAM,GAAAC,OAAA,CAAAD,MAAA,GAAE;EACjBE,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,QAAQ,IAAI,EAAE;EACpCC,IAAI,EAAEL,OAAO,CAACC,GAAG,CAACK,IAAI,IAAI,EAAE;EAC5BC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO,QAAQ,IAAI;AACtC,CAAC","ignoreList":[]}},"mtime":1714088486198},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\controllers\\\\user.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usermethods = void 0;\nvar _database = require(\"./../database/database\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n// =======================================================================\n//    ===================== GESTIÓN DE USUARIOS ========================\n// =======================================================================\nvar getUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    var id, connection, _yield$connection$que, _yield$connection$que2, result;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          // console.log(req.params)\n          id = req.params.id;\n          _context.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context.sent;\n          _context.next = 7;\n          return connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\n        case 7:\n          _yield$connection$que = _context.sent;\n          _yield$connection$que2 = _slicedToArray(_yield$connection$que, 1);\n          result = _yield$connection$que2[0];\n          if (!(result.length === 0)) {\n            _context.next = 12;\n            break;\n          }\n          return _context.abrupt(\"return\", res.status(404).json({\n            message: \"La receta no se encuentra disponible.\"\n          }));\n        case 12:\n          res.json(result);\n          _context.next = 19;\n          break;\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          res.status(500);\n          res.send(_context.t0.message);\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 15]]);\n  }));\n  return function getUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar ejemploUserPaginado = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    var page, itemsPerPage, offset, connection, _yield$connection$que3, _yield$connection$que4, result;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          page = req.query.page; // Obtener el número de página de la consulta\n          itemsPerPage = 10; // Número de resultados por página\n          // Calcular el offset basado en la página actual\n          offset = (page - 1) * itemsPerPage;\n          _context2.next = 6;\n          return (0, _database.getConnection)();\n        case 6:\n          connection = _context2.sent;\n          _context2.next = 9;\n          return connection.query(\"SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT \".concat(itemsPerPage, \" OFFSET \").concat(offset));\n        case 9:\n          _yield$connection$que3 = _context2.sent;\n          _yield$connection$que4 = _slicedToArray(_yield$connection$que3, 1);\n          result = _yield$connection$que4[0];\n          if (!(result.length === 0)) {\n            _context2.next = 14;\n            break;\n          }\n          return _context2.abrupt(\"return\", res.status(404).json({\n            message: \"No hay más resultados disponibles.\"\n          }));\n        case 14:\n          res.json(result);\n          _context2.next = 20;\n          break;\n        case 17:\n          _context2.prev = 17;\n          _context2.t0 = _context2[\"catch\"](0);\n          res.status(500).send(_context2.t0.message);\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 17]]);\n  }));\n  return function ejemploUserPaginado(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n// PARA AÑADIR USUARIOS\nvar addUsuario = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    var _req$body, nombres, user, password, fecha_creacion, usuarionuevo, connection;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _req$body = req.body, nombres = _req$body.nombres, user = _req$body.user, password = _req$body.password, fecha_creacion = _req$body.fecha_creacion; // console.log(banda)\n          // console.log(disco)\n          if (nombres == undefined || user == undefined) {\n            res.status(400).json({\n              message: \"Bad Request, Por favor, completa los datos.\"\n            });\n          }\n          usuarionuevo = {\n            nombres: nombres,\n            user: user,\n            password: password,\n            fecha_creacion: fecha_creacion\n          };\n          _context3.next = 6;\n          return (0, _database.getConnection)();\n        case 6:\n          connection = _context3.sent;\n          _context3.next = 9;\n          return connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\n        case 9:\n          res.json({\n            message: \"Usuario \".concat(user, \" a\\xF1adido exitosamente\")\n          });\n          _context3.next = 16;\n          break;\n        case 12:\n          _context3.prev = 12;\n          _context3.t0 = _context3[\"catch\"](0);\n          res.status(500);\n          res.send(_context3.t0.message);\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 12]]);\n  }));\n  return function addUsuario(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\n// PARA ACTUALIZAR USUARIOS\nvar updateUsuario = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var id, _req$body2, nombres, user, password, usuarioupdate, connection, _yield$connection$que5, _yield$connection$que6, result;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          id = req.params.id;\n          _req$body2 = req.body, nombres = _req$body2.nombres, user = _req$body2.user, password = _req$body2.password;\n          if (!(user === undefined)) {\n            _context4.next = 5;\n            break;\n          }\n          return _context4.abrupt(\"return\", res.status(400).json({\n            message: \"Bad Request, Por favor, completar los datos.\"\n          }));\n        case 5:\n          usuarioupdate = {\n            nombres: nombres,\n            user: user,\n            password: password\n          };\n          _context4.next = 8;\n          return (0, _database.getConnection)();\n        case 8:\n          connection = _context4.sent;\n          _context4.next = 11;\n          return connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\", [usuarioupdate, id]);\n        case 11:\n          _yield$connection$que5 = _context4.sent;\n          _yield$connection$que6 = _slicedToArray(_yield$connection$que5, 1);\n          result = _yield$connection$que6[0];\n          res.json({\n            message: \"Usuario \".concat(user, \" Editado exitosamente\")\n          });\n          // console.log(result);\n          // res.json(result);\n          _context4.next = 21;\n          break;\n        case 17:\n          _context4.prev = 17;\n          _context4.t0 = _context4[\"catch\"](0);\n          res.status(500);\n          res.send(_context4.t0.message);\n        case 21:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[0, 17]]);\n  }));\n  return function updateUsuario(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\n// PARA ELIMINAR ELEMENTOS\nvar deleteUsuario = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    var id, connection, _yield$connection$que7, _yield$connection$que8, result;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          id = req.params.id;\n          _context5.next = 4;\n          return (0, _database.getConnection)();\n        case 4:\n          connection = _context5.sent;\n          _context5.next = 7;\n          return connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\n        case 7:\n          _yield$connection$que7 = _context5.sent;\n          _yield$connection$que8 = _slicedToArray(_yield$connection$que7, 1);\n          result = _yield$connection$que8[0];\n          if (result.affectedRows > 0) {\n            // Elemento borrado exitosamente\n            res.json({\n              message: \"Usuario con ID \".concat(id, \" borrado exitosamente.\")\n            });\n          } else {\n            // No se encontró ningún elemento con el ID proporcionado\n            res.status(404).json({\n              message: \"No se encontr\\xF3 ning\\xFAn usuario con el ID \".concat(id, \".\")\n            });\n          }\n          _context5.next = 16;\n          break;\n        case 13:\n          _context5.prev = 13;\n          _context5.t0 = _context5[\"catch\"](0);\n          // Error en la solicitud\n          res.status(500).send(_context5.t0.message);\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[0, 13]]);\n  }));\n  return function deleteUsuario(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar usermethods = exports.usermethods = {\n  // gestión usuarios\n  getUser: getUser,\n  ejemploUserPaginado: ejemploUserPaginado,\n  addUsuario: addUsuario,\n  updateUsuario: updateUsuario,\n  deleteUsuario: deleteUsuario\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_database","require","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","getUser","_ref","_callee","req","res","id","connection","_yield$connection$que","_yield$connection$que2","result","_callee$","_context","params","getConnection","query","status","json","message","t0","send","_x","_x2","ejemploUserPaginado","_ref2","_callee2","page","itemsPerPage","offset","_yield$connection$que3","_yield$connection$que4","_callee2$","_context2","concat","_x3","_x4","addUsuario","_ref3","_callee3","_req$body","nombres","user","password","fecha_creacion","usuarionuevo","_callee3$","_context3","body","_x5","_x6","updateUsuario","_ref4","_callee4","_req$body2","usuarioupdate","_yield$connection$que5","_yield$connection$que6","_callee4$","_context4","_x7","_x8","deleteUsuario","_ref5","_callee5","_yield$connection$que7","_yield$connection$que8","_callee5$","_context5","affectedRows","_x9","_x10","usermethods","exports"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\controllers\\","sources":["user.controller.js"],"sourcesContent":["import { getConnection } from \"./../database/database\"\r\n\r\n// =======================================================================\r\n//    ===================== GESTIÓN DE USUARIOS ========================\r\n// =======================================================================\r\nconst getUser = async (req, res) => {\r\n\r\n    try {\r\n        // console.log(req.params)\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"SELECT id_user,nombres,user,fecha_creacion FROM usuarios\");\r\n        // console.log(result);\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"La receta no se encuentra disponible.\" });\r\n        }\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nconst ejemploUserPaginado = async (req, res) => {\r\n    try {\r\n        const { page } = req.query; // Obtener el número de página de la consulta\r\n        const itemsPerPage = 10; // Número de resultados por página\r\n\r\n        // Calcular el offset basado en la página actual\r\n        const offset = (page - 1) * itemsPerPage;\r\n\r\n        const connection = await getConnection();\r\n\r\n        // Consulta SQL con LIMIT y OFFSET para la paginación\r\n        const [result] = await connection.query(\r\n            `SELECT id_user, nombres, user, fecha_creacion FROM usuarios LIMIT ${itemsPerPage} OFFSET ${offset}`\r\n        );\r\n\r\n        // Verificar si hay resultados\r\n        if (result.length === 0) {\r\n            return res.status(404).json({ message: \"No hay más resultados disponibles.\" });\r\n        }\r\n\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA AÑADIR USUARIOS\r\nconst addUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { nombres, user, password, fecha_creacion } = req.body;\r\n        // console.log(banda)\r\n        // console.log(disco)\r\n        if (nombres == undefined || user == undefined) {\r\n            res.status(400).json({ message: \"Bad Request, Por favor, completa los datos.\" })\r\n        }\r\n        const usuarionuevo = {\r\n            nombres, user, password, fecha_creacion\r\n        }\r\n        const connection = await getConnection();\r\n        await connection.query(\"INSERT INTO usuarios SET ?\", usuarionuevo);\r\n        res.json({ message: `Usuario ${user} añadido exitosamente`})\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n// PARA ACTUALIZAR USUARIOS\r\nconst updateUsuario = async (req, res) => {\r\n\r\n    try {\r\n        const { id } = req.params;\r\n        const { nombres, user, password, } = req.body;\r\n        if (user === undefined) {\r\n            return res.status(400).json({ message: \"Bad Request, Por favor, completar los datos.\" })\r\n        }\r\n        const usuarioupdate = {\r\n            nombres, user, password,\r\n        }\r\n\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"UPDATE usuarios SET ? WHERE id_user = ?;\",[usuarioupdate,id]);\r\n        res.json( { message: `Usuario ${user} Editado exitosamente`})\r\n        // console.log(result);\r\n        // res.json(result);\r\n    } catch (error) {\r\n        res.status(500);\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\n\r\n// PARA ELIMINAR ELEMENTOS\r\nconst deleteUsuario = async (req, res) => {\r\n    try {\r\n        const { id } = req.params;\r\n        const connection = await getConnection();\r\n        const [result] = await connection.query(\"DELETE FROM usuarios WHERE id_user = ?;\", id);\r\n\r\n        if (result.affectedRows > 0) {\r\n            // Elemento borrado exitosamente\r\n            res.json({ message: `Usuario con ID ${id} borrado exitosamente.` });\r\n        } else {\r\n            // No se encontró ningún elemento con el ID proporcionado\r\n            res.status(404).json({ message: `No se encontró ningún usuario con el ID ${id}.` });\r\n        }\r\n    } catch (error) {\r\n        // Error en la solicitud\r\n        res.status(500).send(error.message);\r\n    }\r\n};\r\n\r\n\r\nexport const usermethods = {\r\n    // gestión usuarios\r\n    getUser, ejemploUserPaginado, addUsuario, updateUsuario, deleteUsuario,\r\n    \r\n};"],"mappings":"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","ignoreList":[]}},"mtime":1714088486199},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\n// routes - rutas\n// import LanguageRoutes from \"./routes/language.routes\"\nvar LanguageRoutes = require('./routes/language.routes');\nvar express = require('express');\nvar morgan = require('morgan');\n// import express from \"express\";\n// import morgan from \"morgan\";\nvar app = express(); //ejecu express\nvar cors = require('cors');\n// settings\napp.set(\"port\", 3000);\n// middleware\napp.use(morgan(\"dev\"));\napp.use(cors({\n  origin: ['http://localhost:3000']\n}));\napp.use(express.json());\n\n// routes\n// app.use(\"/listado\", LanguageRoutes)\napp.use(\"/\", LanguageRoutes);\n// app.use(\"/api/usuarios\")\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMYW5ndWFnZVJvdXRlcyIsInJlcXVpcmUiLCJleHByZXNzIiwibW9yZ2FuIiwiYXBwIiwiY29ycyIsInNldCIsInVzZSIsIm9yaWdpbiIsImpzb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBsYXphdmVzcHVjaW9cXERvY3VtZW50c1xcR2l0SHViXFxBU1lTNTEzMS1GZXJyZXRlcmlhXFxBUEkgKyBCQkREXFxBUEkgRmVycmV0ZXJpYVxcc3JjXFwiLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByb3V0ZXMgLSBydXRhc1xyXG4vLyBpbXBvcnQgTGFuZ3VhZ2VSb3V0ZXMgZnJvbSBcIi4vcm91dGVzL2xhbmd1YWdlLnJvdXRlc1wiXHJcbmNvbnN0IExhbmd1YWdlUm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvbGFuZ3VhZ2Uucm91dGVzJyk7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcclxuY29uc3QgbW9yZ2FuID0gcmVxdWlyZSAoJ21vcmdhbicpXHJcbi8vIGltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbi8vIGltcG9ydCBtb3JnYW4gZnJvbSBcIm1vcmdhblwiO1xyXG5jb25zdCBhcHA9ZXhwcmVzcygpOyAvL2VqZWN1IGV4cHJlc3NcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKVxyXG4vLyBzZXR0aW5nc1xyXG5hcHAuc2V0KFwicG9ydFwiLCAzMDAwKTtcclxuLy8gbWlkZGxld2FyZVxyXG5hcHAudXNlKG1vcmdhbihcImRldlwiKSk7XHJcbmFwcC51c2UoY29ycyhcclxuICAgIHtvcmlnaW46IFsnaHR0cDovL2xvY2FsaG9zdDozMDAwJyxdfVxyXG4pKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcblxyXG4vLyByb3V0ZXNcclxuLy8gYXBwLnVzZShcIi9saXN0YWRvXCIsIExhbmd1YWdlUm91dGVzKVxyXG5hcHAudXNlKFwiL1wiLExhbmd1YWdlUm91dGVzKVxyXG4vLyBhcHAudXNlKFwiL2FwaS91c3Vhcmlvc1wiKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHA7Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQSxJQUFNQSxjQUFjLEdBQUdDLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQztBQUMxRCxJQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsSUFBTUUsTUFBTSxHQUFHRixPQUFPLENBQUUsUUFBUSxDQUFDO0FBQ2pDO0FBQ0E7QUFDQSxJQUFNRyxHQUFHLEdBQUNGLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyQixJQUFNRyxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUI7QUFDQUcsR0FBRyxDQUFDRSxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQztBQUNyQjtBQUNBRixHQUFHLENBQUNHLEdBQUcsQ0FBQ0osTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3RCQyxHQUFHLENBQUNHLEdBQUcsQ0FBQ0YsSUFBSSxDQUNSO0VBQUNHLE1BQU0sRUFBRSxDQUFDLHVCQUF1QjtBQUFFLENBQ3ZDLENBQUMsQ0FBQztBQUNGSixHQUFHLENBQUNHLEdBQUcsQ0FBQ0wsT0FBTyxDQUFDTyxJQUFJLENBQUMsQ0FBQyxDQUFDOztBQUV2QjtBQUNBO0FBQ0FMLEdBQUcsQ0FBQ0csR0FBRyxDQUFDLEdBQUcsRUFBQ1AsY0FBYyxDQUFDO0FBQzNCOztBQUVBVSxNQUFNLENBQUNDLE9BQU8sR0FBR1AsR0FBRyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["LanguageRoutes","require","express","morgan","app","cors","set","use","origin","json","module","exports"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\","sources":["app.js"],"sourcesContent":["// routes - rutas\r\n// import LanguageRoutes from \"./routes/language.routes\"\r\nconst LanguageRoutes = require('./routes/language.routes');\r\nconst express = require('express')\r\nconst morgan = require ('morgan')\r\n// import express from \"express\";\r\n// import morgan from \"morgan\";\r\nconst app=express(); //ejecu express\r\nconst cors = require('cors')\r\n// settings\r\napp.set(\"port\", 3000);\r\n// middleware\r\napp.use(morgan(\"dev\"));\r\napp.use(cors(\r\n    {origin: ['http://localhost:3000',]}\r\n));\r\napp.use(express.json());\r\n\r\n// routes\r\n// app.use(\"/listado\", LanguageRoutes)\r\napp.use(\"/\",LanguageRoutes)\r\n// app.use(\"/api/usuarios\")\r\n\r\nmodule.exports = app;"],"mappings":";;AAAA;AACA;AACA,IAAMA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC1D,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,IAAME,MAAM,GAAGF,OAAO,CAAE,QAAQ,CAAC;AACjC;AACA;AACA,IAAMG,GAAG,GAACF,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB,IAAMG,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B;AACAG,GAAG,CAACE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;AACrB;AACAF,GAAG,CAACG,GAAG,CAACJ,MAAM,CAAC,KAAK,CAAC,CAAC;AACtBC,GAAG,CAACG,GAAG,CAACF,IAAI,CACR;EAACG,MAAM,EAAE,CAAC,uBAAuB;AAAE,CACvC,CAAC,CAAC;AACFJ,GAAG,CAACG,GAAG,CAACL,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA;AACAL,GAAG,CAACG,GAAG,CAAC,GAAG,EAACP,cAAc,CAAC;AAC3B;;AAEAU,MAAM,CAACC,OAAO,GAAGP,GAAG","ignoreList":[]}},"mtime":1714088486197},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"filename\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\\\\src\\\\routes\\\\language.routes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\plazavespucio\\\\Documents\\\\GitHub\\\\ASYS5131-Ferreteria\\\\API + BBDD\\\\API Ferreteria\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"DoWhileStatement\":{\"exit\":[null]},\"ForInStatement\":{\"exit\":[null]},\"ForStatement\":{\"exit\":[null]},\"WhileStatement\":{\"exit\":[null]},\"ForOfStatement\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.24.4:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _express = require(\"express\");\nvar _recetas = require(\"../controllers/recetas.controller\");\nvar _user = require(\"../controllers/user.controller\");\n// ruta del proyecto\nvar router = (0, _express.Router)();\n// url principales | http://localhost:3000/\n// router.get(\"/\", recetasController.getRecetas);\nrouter.get(\"/\", function (req, res) {\n  _recetas.methods.getRecetas(req, res);\n});\n// router.get(\"/usuario\", userController.getUser);\nrouter.get(\"/usuario\", function (req, res) {\n  _user.usermethods.getUser(req, res);\n});\n\n// ========= RECETAS =========\n\n// METODOS GET\nrouter.get(\"/receta/:id\", _recetas.methods.getReceta); // http://localhost:3000/receta/numero\nrouter.get(\"/receta-aleatoria\", _recetas.methods.recetaRandom); // http://localhost:3000/receta-aleatoria\nrouter.get(\"/recetas-chile\", _recetas.methods.getRecetaCL); // http://localhost:3000/recetas-chile\nrouter.get(\"/recetas-usa\", _recetas.methods.getRecetaUSA); // http://localhost:3000/recetas-usa\nrouter.get(\"/recetas-gb\", _recetas.methods.getRecetaGB); // http://localhost:3000/recetas-gb\nrouter.get(\"/recetas-canada\", _recetas.methods.getRecetaCA); // http://localhost:3000/recetas-canada\nrouter.get(\"/recetas-es\", _recetas.methods.getRecetaES); // http://localhost:3000/recetas-es\nrouter.get(\"/recetas-mexico\", _recetas.methods.getRecetaMX); // http://localhost:3000/recetas-mexico\nrouter.get(\"/recetas-argentina\", _recetas.methods.getReceta_ARG); // http://localhost:3000/recetas-argentina\nrouter.get(\"/paises\", _recetas.methods.getPaises); // http://localhost:3000/paises\nrouter.get(\"/categorias\", _recetas.methods.getCategorias); // http://localhost:3000/categorias\nrouter.get(\"/categorias-postres\", _recetas.methods.getPostres); // http://localhost:3000/categorias-postres\nrouter.get(\"/categorias-desayuno\", _recetas.methods.getDesayuno); // http://localhost:3000/categorias-desayuno\n// METODOS POST\n// Ruta PUT para agregar una receta\nrouter.put('/add-receta', function (req, res) {\n  res.status(200).send('Receta agregada exitosamente'); // http://localhost:3000/add-receta\n});\n// METODOS PUT\nrouter.put(\"/edit-receta/:id\", _recetas.methods.updateReceta); // http://localhost:3000/edit-receta/numero\n// METODOS DELETE\nrouter[\"delete\"](\"/delete-receta/:id\", _recetas.methods.deleteReceta); // http://localhost:3000/delete-receta/numero\n\n// ========= USUARIOS =========\n\n// METODO GET\nrouter.get(\"/\", _user.usermethods.getUser); // http://localhost:3000/usuario\nrouter.get(\"/usuarioejemplo\", _user.usermethods.ejemploUserPaginado); // http://localhost:3000/usuarioejemplo?page=1\n// METODO POST\nrouter.post(\"/usuario\"); // http://localhost:3000/usuario\n// METODO PUT\nrouter.put(\"/usuario\"); // http://localhost:3000/usuario\n// METODO DELETE\nrouter[\"delete\"](\"/usuario\"); // http://localhost:3000/usuario\nvar _default = exports[\"default\"] = router;\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsInJlcXVpcmUiLCJfcmVjZXRhcyIsIl91c2VyIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwicmVjZXRhc0NvbnRyb2xsZXIiLCJnZXRSZWNldGFzIiwidXNlckNvbnRyb2xsZXIiLCJnZXRVc2VyIiwiZ2V0UmVjZXRhIiwicmVjZXRhUmFuZG9tIiwiZ2V0UmVjZXRhQ0wiLCJnZXRSZWNldGFVU0EiLCJnZXRSZWNldGFHQiIsImdldFJlY2V0YUNBIiwiZ2V0UmVjZXRhRVMiLCJnZXRSZWNldGFNWCIsImdldFJlY2V0YV9BUkciLCJnZXRQYWlzZXMiLCJnZXRDYXRlZ29yaWFzIiwiZ2V0UG9zdHJlcyIsImdldERlc2F5dW5vIiwicHV0Iiwic3RhdHVzIiwic2VuZCIsInVwZGF0ZVJlY2V0YSIsImRlbGV0ZVJlY2V0YSIsImVqZW1wbG9Vc2VyUGFnaW5hZG8iLCJwb3N0IiwiX2RlZmF1bHQiLCJleHBvcnRzIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHBsYXphdmVzcHVjaW9cXERvY3VtZW50c1xcR2l0SHViXFxBU1lTNTEzMS1GZXJyZXRlcmlhXFxBUEkgKyBCQkREXFxBUEkgRmVycmV0ZXJpYVxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXMiOlsibGFuZ3VhZ2Uucm91dGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7IG1ldGhvZHMgYXMgcmVjZXRhc0NvbnRyb2xsZXIgfSBmcm9tIFwiLi4vY29udHJvbGxlcnMvcmVjZXRhcy5jb250cm9sbGVyXCI7XHJcbmltcG9ydCB7IHVzZXJtZXRob2RzIGFzIHVzZXJDb250cm9sbGVyIH0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3VzZXIuY29udHJvbGxlclwiO1xyXG4vLyBydXRhIGRlbCBwcm95ZWN0b1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuLy8gdXJsIHByaW5jaXBhbGVzIHwgaHR0cDovL2xvY2FsaG9zdDozMDAwL1xyXG4vLyByb3V0ZXIuZ2V0KFwiL1wiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFzKTtcclxucm91dGVyLmdldChcIi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFzKHJlcSwgcmVzKTtcclxufSk7XHJcbi8vIHJvdXRlci5nZXQoXCIvdXN1YXJpb1wiLCB1c2VyQ29udHJvbGxlci5nZXRVc2VyKTtcclxucm91dGVyLmdldChcIi91c3VhcmlvXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgdXNlckNvbnRyb2xsZXIuZ2V0VXNlcihyZXEsIHJlcyk7XHJcbn0pO1xyXG5cclxuLy8gPT09PT09PT09IFJFQ0VUQVMgPT09PT09PT09XHJcblxyXG4vLyBNRVRPRE9TIEdFVFxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YS86aWRcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YS9udW1lcm9cclxucm91dGVyLmdldChcIi9yZWNldGEtYWxlYXRvcmlhXCIsIHJlY2V0YXNDb250cm9sbGVyLnJlY2V0YVJhbmRvbSk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGEtYWxlYXRvcmlhXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1jaGlsZVwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFDTCkgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlY2V0YXMtY2hpbGVcclxucm91dGVyLmdldChcIi9yZWNldGFzLXVzYVwiLCByZWNldGFzQ29udHJvbGxlci5nZXRSZWNldGFVU0EpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLXVzYVxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtZ2JcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhR0IpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLWdiXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1jYW5hZGFcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhQ0EpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLWNhbmFkYVxyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtZXNcIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhRVMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLWVzXHJcbnJvdXRlci5nZXQoXCIvcmVjZXRhcy1tZXhpY29cIiwgcmVjZXRhc0NvbnRyb2xsZXIuZ2V0UmVjZXRhTVgpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLW1leGljb1xyXG5yb3V0ZXIuZ2V0KFwiL3JlY2V0YXMtYXJnZW50aW5hXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFJlY2V0YV9BUkcpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9yZWNldGFzLWFyZ2VudGluYVxyXG5yb3V0ZXIuZ2V0KFwiL3BhaXNlc1wiLCByZWNldGFzQ29udHJvbGxlci5nZXRQYWlzZXMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wYWlzZXNcclxucm91dGVyLmdldChcIi9jYXRlZ29yaWFzXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldENhdGVnb3JpYXMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jYXRlZ29yaWFzXHJcbnJvdXRlci5nZXQoXCIvY2F0ZWdvcmlhcy1wb3N0cmVzXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldFBvc3RyZXMpIC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jYXRlZ29yaWFzLXBvc3RyZXNcclxucm91dGVyLmdldChcIi9jYXRlZ29yaWFzLWRlc2F5dW5vXCIsIHJlY2V0YXNDb250cm9sbGVyLmdldERlc2F5dW5vKSAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvY2F0ZWdvcmlhcy1kZXNheXVub1xyXG4vLyBNRVRPRE9TIFBPU1RcclxuLy8gUnV0YSBQVVQgcGFyYSBhZ3JlZ2FyIHVuYSByZWNldGFcclxucm91dGVyLnB1dCgnL2FkZC1yZWNldGEnLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdSZWNldGEgYWdyZWdhZGEgZXhpdG9zYW1lbnRlJyk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hZGQtcmVjZXRhXHJcbn0pOyBcclxuLy8gTUVUT0RPUyBQVVRcclxucm91dGVyLnB1dChcIi9lZGl0LXJlY2V0YS86aWRcIiwgcmVjZXRhc0NvbnRyb2xsZXIudXBkYXRlUmVjZXRhKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL2VkaXQtcmVjZXRhL251bWVyb1xyXG4vLyBNRVRPRE9TIERFTEVURVxyXG5yb3V0ZXIuZGVsZXRlKFwiL2RlbGV0ZS1yZWNldGEvOmlkXCIsIHJlY2V0YXNDb250cm9sbGVyLmRlbGV0ZVJlY2V0YSk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9kZWxldGUtcmVjZXRhL251bWVyb1xyXG5cclxuXHJcbi8vID09PT09PT09PSBVU1VBUklPUyA9PT09PT09PT1cclxuXHJcbi8vIE1FVE9ETyBHRVRcclxucm91dGVyLmdldChcIi9cIiwgdXNlckNvbnRyb2xsZXIuZ2V0VXNlcik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c3VhcmlvXHJcbnJvdXRlci5nZXQoXCIvdXN1YXJpb2VqZW1wbG9cIiwgdXNlckNvbnRyb2xsZXIuZWplbXBsb1VzZXJQYWdpbmFkbyk7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c3VhcmlvZWplbXBsbz9wYWdlPTFcclxuLy8gTUVUT0RPIFBPU1Rcclxucm91dGVyLnBvc3QoXCIvdXN1YXJpb1wiKTsgLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL3VzdWFyaW9cclxuLy8gTUVUT0RPIFBVVFxyXG5yb3V0ZXIucHV0KFwiL3VzdWFyaW9cIik7IC8vIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c3VhcmlvXHJcbi8vIE1FVE9ETyBERUxFVEVcclxucm91dGVyLmRlbGV0ZShcIi91c3VhcmlvXCIpOyAvLyBodHRwOi8vbG9jYWxob3N0OjMwMDAvdXN1YXJpb1xyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsUUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsS0FBQSxHQUFBRixPQUFBO0FBQ0E7QUFDQSxJQUFNRyxNQUFNLEdBQUcsSUFBQUMsZUFBTSxFQUFDLENBQUM7QUFDdkI7QUFDQTtBQUNBRCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsVUFBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUs7RUFDMUJDLGdCQUFpQixDQUFDQyxVQUFVLENBQUNILEdBQUcsRUFBRUMsR0FBRyxDQUFDO0FBQzFDLENBQUMsQ0FBQztBQUNGO0FBQ0FKLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFVBQVUsRUFBRSxVQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBSztFQUNqQ0csaUJBQWMsQ0FBQ0MsT0FBTyxDQUFDTCxHQUFHLEVBQUVDLEdBQUcsQ0FBQztBQUNwQyxDQUFDLENBQUM7O0FBRUY7O0FBRUE7QUFDQUosTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFRyxnQkFBaUIsQ0FBQ0ksU0FBUyxDQUFDLENBQUMsQ0FBQztBQUN4RFQsTUFBTSxDQUFDRSxHQUFHLENBQUMsbUJBQW1CLEVBQUVHLGdCQUFpQixDQUFDSyxZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2pFVixNQUFNLENBQUNFLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRUcsZ0JBQWlCLENBQUNNLFdBQVcsQ0FBQyxFQUFDO0FBQzVEWCxNQUFNLENBQUNFLEdBQUcsQ0FBQyxjQUFjLEVBQUVHLGdCQUFpQixDQUFDTyxZQUFZLENBQUMsRUFBQztBQUMzRFosTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFRyxnQkFBaUIsQ0FBQ1EsV0FBVyxDQUFDLEVBQUM7QUFDekRiLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGlCQUFpQixFQUFFRyxnQkFBaUIsQ0FBQ1MsV0FBVyxDQUFDLEVBQUM7QUFDN0RkLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLGFBQWEsRUFBRUcsZ0JBQWlCLENBQUNVLFdBQVcsQ0FBQyxFQUFDO0FBQ3pEZixNQUFNLENBQUNFLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRUcsZ0JBQWlCLENBQUNXLFdBQVcsQ0FBQyxFQUFDO0FBQzdEaEIsTUFBTSxDQUFDRSxHQUFHLENBQUMsb0JBQW9CLEVBQUVHLGdCQUFpQixDQUFDWSxhQUFhLENBQUMsRUFBQztBQUNsRWpCLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDLFNBQVMsRUFBRUcsZ0JBQWlCLENBQUNhLFNBQVMsQ0FBQyxFQUFDO0FBQ25EbEIsTUFBTSxDQUFDRSxHQUFHLENBQUMsYUFBYSxFQUFFRyxnQkFBaUIsQ0FBQ2MsYUFBYSxDQUFDLEVBQUM7QUFDM0RuQixNQUFNLENBQUNFLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRUcsZ0JBQWlCLENBQUNlLFVBQVUsQ0FBQyxFQUFDO0FBQ2hFcEIsTUFBTSxDQUFDRSxHQUFHLENBQUMsc0JBQXNCLEVBQUVHLGdCQUFpQixDQUFDZ0IsV0FBVyxDQUFDLEVBQUM7QUFDbEU7QUFDQTtBQUNBckIsTUFBTSxDQUFDc0IsR0FBRyxDQUFDLGFBQWEsRUFBRSxVQUFDbkIsR0FBRyxFQUFFQyxHQUFHLEVBQUs7RUFDcENBLEdBQUcsQ0FBQ21CLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLDhCQUE4QixDQUFDLENBQUMsQ0FBQztBQUMxRCxDQUFDLENBQUM7QUFDRjtBQUNBeEIsTUFBTSxDQUFDc0IsR0FBRyxDQUFDLGtCQUFrQixFQUFFakIsZ0JBQWlCLENBQUNvQixZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2hFO0FBQ0F6QixNQUFNLFVBQU8sQ0FBQyxvQkFBb0IsRUFBRUssZ0JBQWlCLENBQUNxQixZQUFZLENBQUMsQ0FBQyxDQUFDOztBQUdyRTs7QUFFQTtBQUNBMUIsTUFBTSxDQUFDRSxHQUFHLENBQUMsR0FBRyxFQUFFSyxpQkFBYyxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ3pDUixNQUFNLENBQUNFLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRUssaUJBQWMsQ0FBQ29CLG1CQUFtQixDQUFDLENBQUMsQ0FBQztBQUNuRTtBQUNBM0IsTUFBTSxDQUFDNEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDekI7QUFDQTVCLE1BQU0sQ0FBQ3NCLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQ3hCO0FBQ0F0QixNQUFNLFVBQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO0FBQUEsSUFBQTZCLFFBQUEsR0FBQUMsT0FBQSxjQUlaOUIsTUFBTTtBQUVyQitCLE1BQU0sQ0FBQ0QsT0FBTyxHQUFHOUIsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["_express","require","_recetas","_user","router","Router","get","req","res","recetasController","getRecetas","userController","getUser","getReceta","recetaRandom","getRecetaCL","getRecetaUSA","getRecetaGB","getRecetaCA","getRecetaES","getRecetaMX","getReceta_ARG","getPaises","getCategorias","getPostres","getDesayuno","put","status","send","updateReceta","deleteReceta","ejemploUserPaginado","post","_default","exports","module"],"sourceRoot":"C:\\Users\\plazavespucio\\Documents\\GitHub\\ASYS5131-Ferreteria\\API + BBDD\\API Ferreteria\\src\\routes\\","sources":["language.routes.js"],"sourcesContent":["import { Router } from \"express\";\r\nimport { methods as recetasController } from \"../controllers/recetas.controller\";\r\nimport { usermethods as userController } from \"../controllers/user.controller\";\r\n// ruta del proyecto\r\nconst router = Router();\r\n// url principales | http://localhost:3000/\r\n// router.get(\"/\", recetasController.getRecetas);\r\nrouter.get(\"/\", (req, res) => {\r\n    recetasController.getRecetas(req, res);\r\n});\r\n// router.get(\"/usuario\", userController.getUser);\r\nrouter.get(\"/usuario\", (req, res) => {\r\n    userController.getUser(req, res);\r\n});\r\n\r\n// ========= RECETAS =========\r\n\r\n// METODOS GET\r\nrouter.get(\"/receta/:id\", recetasController.getReceta); // http://localhost:3000/receta/numero\r\nrouter.get(\"/receta-aleatoria\", recetasController.recetaRandom); // http://localhost:3000/receta-aleatoria\r\nrouter.get(\"/recetas-chile\", recetasController.getRecetaCL) // http://localhost:3000/recetas-chile\r\nrouter.get(\"/recetas-usa\", recetasController.getRecetaUSA) // http://localhost:3000/recetas-usa\r\nrouter.get(\"/recetas-gb\", recetasController.getRecetaGB) // http://localhost:3000/recetas-gb\r\nrouter.get(\"/recetas-canada\", recetasController.getRecetaCA) // http://localhost:3000/recetas-canada\r\nrouter.get(\"/recetas-es\", recetasController.getRecetaES) // http://localhost:3000/recetas-es\r\nrouter.get(\"/recetas-mexico\", recetasController.getRecetaMX) // http://localhost:3000/recetas-mexico\r\nrouter.get(\"/recetas-argentina\", recetasController.getReceta_ARG) // http://localhost:3000/recetas-argentina\r\nrouter.get(\"/paises\", recetasController.getPaises) // http://localhost:3000/paises\r\nrouter.get(\"/categorias\", recetasController.getCategorias) // http://localhost:3000/categorias\r\nrouter.get(\"/categorias-postres\", recetasController.getPostres) // http://localhost:3000/categorias-postres\r\nrouter.get(\"/categorias-desayuno\", recetasController.getDesayuno) // http://localhost:3000/categorias-desayuno\r\n// METODOS POST\r\n// Ruta PUT para agregar una receta\r\nrouter.put('/add-receta', (req, res) => {\r\n    res.status(200).send('Receta agregada exitosamente'); // http://localhost:3000/add-receta\r\n}); \r\n// METODOS PUT\r\nrouter.put(\"/edit-receta/:id\", recetasController.updateReceta); // http://localhost:3000/edit-receta/numero\r\n// METODOS DELETE\r\nrouter.delete(\"/delete-receta/:id\", recetasController.deleteReceta); // http://localhost:3000/delete-receta/numero\r\n\r\n\r\n// ========= USUARIOS =========\r\n\r\n// METODO GET\r\nrouter.get(\"/\", userController.getUser); // http://localhost:3000/usuario\r\nrouter.get(\"/usuarioejemplo\", userController.ejemploUserPaginado); // http://localhost:3000/usuarioejemplo?page=1\r\n// METODO POST\r\nrouter.post(\"/usuario\"); // http://localhost:3000/usuario\r\n// METODO PUT\r\nrouter.put(\"/usuario\"); // http://localhost:3000/usuario\r\n// METODO DELETE\r\nrouter.delete(\"/usuario\"); // http://localhost:3000/usuario\r\n\r\n\r\n\r\nexport default router;\r\n\r\nmodule.exports = router"],"mappings":"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","ignoreList":[]}},"mtime":1714088955010}}